ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_Seq_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_SAR_Seq_1_initVar
  20              		.bss
  21              		.type	ADC_SAR_Seq_1_initVar, %object
  22              		.size	ADC_SAR_Seq_1_initVar, 1
  23              	ADC_SAR_Seq_1_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_SAR_Seq_1_offset,2,4
  26              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_SAR_Seq_1_channelsConfig, %object
  30              		.size	ADC_SAR_Seq_1_channelsConfig, 4
  31              	ADC_SAR_Seq_1_channelsConfig:
  32 0000 00040000 		.word	1024
  33              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_SAR_Seq_1_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_SAR_Seq_1_Start, %function
  39              	ADC_SAR_Seq_1_Start:
  40              	.LFB2:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 2


  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000400u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_SAR_Seq_1_initVar
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
  78              		.global	__aeabi_idiv
  79              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  80              		.align	2
  81              		.global	ADC_SAR_Seq_1_Init
  82              		.code	16
  83              		.thumb_func
  84              		.type	ADC_SAR_Seq_1_Init, %function
  85              	ADC_SAR_Seq_1_Init:
  86              	.LFB3:
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 4


  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  87              		.loc 1 95 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 16
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 5


 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  99              		.loc 1 172 0
 100 0006 0321     		movs	r1, #3
 101 0008 0F20     		movs	r0, #15
 102 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
 103              		.loc 1 173 0
 104 000e 5A4B     		ldr	r3, .L17
 105 0010 1900     		movs	r1, r3
 106 0012 0F20     		movs	r0, #15
 107 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
 108              		.loc 1 177 0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 6


 109 0018 584B     		ldr	r3, .L17+4
 110 001a 0122     		movs	r2, #1
 111 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
 112              		.loc 1 180 0
 113 001e 584B     		ldr	r3, .L17+8
 114 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0
 116 0022 002B     		cmp	r3, #0
 117 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 is_stmt 0 discriminator 1
 119 0026 5749     		ldr	r1, .L17+12
 120 0028 00E0     		b	.L7
 121              	.L6:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 122              		.loc 1 178 0 discriminator 2
 123 002a 5749     		ldr	r1, .L17+16
 124              	.L7:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 125              		.loc 1 178 0 discriminator 4
 126 002c 574B     		ldr	r3, .L17+20
 127 002e 574A     		ldr	r2, .L17+20
 128 0030 1268     		ldr	r2, [r2]
 129 0032 0A43     		orrs	r2, r1
 130 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
 131              		.loc 1 182 0 is_stmt 1 discriminator 4
 132 0036 564B     		ldr	r3, .L17+24
 133 0038 564A     		ldr	r2, .L17+28
 134 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 135              		.loc 1 183 0 discriminator 4
 136 003c 564B     		ldr	r3, .L17+32
 137 003e 574A     		ldr	r2, .L17+36
 138 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
 139              		.loc 1 184 0 discriminator 4
 140 0042 574B     		ldr	r3, .L17+40
 141 0044 0022     		movs	r2, #0
 142 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 143              		.loc 1 185 0 discriminator 4
 144 0048 564B     		ldr	r3, .L17+44
 145 004a 574A     		ldr	r2, .L17+48
 146 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 147              		.loc 1 186 0 discriminator 4
 148 004e 574B     		ldr	r3, .L17+52
 149 0050 574A     		ldr	r2, .L17+56
 150 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 7


 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 151              		.loc 1 190 0 discriminator 4
 152 0054 574B     		ldr	r3, .L17+60
 153 0056 574A     		ldr	r2, .L17+60
 154 0058 1268     		ldr	r2, [r2]
 155 005a 8021     		movs	r1, #128
 156 005c 4902     		lsls	r1, r1, #9
 157 005e 0A43     		orrs	r2, r1
 158 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 159              		.loc 1 197 0 discriminator 4
 160 0062 554B     		ldr	r3, .L17+64
 161 0064 0022     		movs	r2, #0
 162 0066 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 163              		.loc 1 198 0 discriminator 4
 164 0068 544B     		ldr	r3, .L17+68
 165 006a 0022     		movs	r2, #0
 166 006c 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 167              		.loc 1 199 0 discriminator 4
 168 006e 544B     		ldr	r3, .L17+72
 169 0070 0122     		movs	r2, #1
 170 0072 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 171              		.loc 1 206 0 discriminator 4
 172 0074 534B     		ldr	r3, .L17+76
 173 0076 1B68     		ldr	r3, [r3]
 174 0078 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 175              		.loc 1 207 0 discriminator 4
 176 007a 7B68     		ldr	r3, [r7, #4]
 177 007c 524A     		ldr	r2, .L17+80
 178 007e 1340     		ands	r3, r2
 179 0080 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 8


 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 180              		.loc 1 220 0 discriminator 4
 181 0082 7B68     		ldr	r3, [r7, #4]
 182 0084 8022     		movs	r2, #128
 183 0086 9205     		lsls	r2, r2, #22
 184 0088 1343     		orrs	r3, r2
 185 008a 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 186              		.loc 1 221 0 discriminator 4
 187 008c 7B68     		ldr	r3, [r7, #4]
 188 008e 0122     		movs	r2, #1
 189 0090 9343     		bics	r3, r2
 190 0092 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 191              		.loc 1 226 0 discriminator 4
 192 0094 4B4B     		ldr	r3, .L17+76
 193 0096 7A68     		ldr	r2, [r7, #4]
 194 0098 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 195              		.loc 1 232 0 discriminator 4
 196 009a 0023     		movs	r3, #0
 197 009c FB60     		str	r3, [r7, #12]
 198 009e 63E0     		b	.L8
 199              	.L16:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 200              		.loc 1 234 0
 201 00a0 8023     		movs	r3, #128
 202 00a2 DA00     		lsls	r2, r3, #3
 203 00a4 DC23     		movs	r3, #220
 204 00a6 9B01     		lsls	r3, r3, #6
 205 00a8 1340     		ands	r3, r2
 206 00aa 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 9


 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 207              		.loc 1 253 0
 208 00ac FB68     		ldr	r3, [r7, #12]
 209 00ae 9B00     		lsls	r3, r3, #2
 210 00b0 464A     		ldr	r2, .L17+84
 211 00b2 9446     		mov	ip, r2
 212 00b4 6344     		add	r3, r3, ip
 213 00b6 7A68     		ldr	r2, [r7, #4]
 214 00b8 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 215              		.loc 1 255 0
 216 00ba 8023     		movs	r3, #128
 217 00bc DB00     		lsls	r3, r3, #3
 218 00be 0122     		movs	r2, #1
 219 00c0 1340     		ands	r3, r2
 220 00c2 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 221              		.loc 1 257 0
 222 00c4 3C4B     		ldr	r3, .L17+64
 223 00c6 3C4A     		ldr	r2, .L17+64
 224 00c8 1168     		ldr	r1, [r2]
 225 00ca 0120     		movs	r0, #1
 226 00cc FA68     		ldr	r2, [r7, #12]
 227 00ce 9040     		lsls	r0, r0, r2
 228 00d0 0200     		movs	r2, r0
 229 00d2 1204     		lsls	r2, r2, #16
 230 00d4 120C     		lsrs	r2, r2, #16
 231 00d6 0A43     		orrs	r2, r1
 232 00d8 1A60     		str	r2, [r3]
 233              	.L9:
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 234              		.loc 1 260 0
 235 00da 8023     		movs	r3, #128
 236 00dc DB00     		lsls	r3, r3, #3
 237 00de 0222     		movs	r2, #2
 238 00e0 1340     		ands	r3, r2
 239 00e2 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 240              		.loc 1 262 0
 241 00e4 354B     		ldr	r3, .L17+68
 242 00e6 354A     		ldr	r2, .L17+68
 243 00e8 1168     		ldr	r1, [r2]
 244 00ea 0120     		movs	r0, #1
 245 00ec FA68     		ldr	r2, [r7, #12]
 246 00ee 9040     		lsls	r0, r0, r2
 247 00f0 0200     		movs	r2, r0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 10


 248 00f2 1204     		lsls	r2, r2, #16
 249 00f4 120C     		lsrs	r2, r2, #16
 250 00f6 0A43     		orrs	r2, r1
 251 00f8 1A60     		str	r2, [r3]
 252              	.L10:
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 253              		.loc 1 282 0
 254 00fa 8023     		movs	r3, #128
 255 00fc DA00     		lsls	r2, r3, #3
 256 00fe 8023     		movs	r3, #128
 257 0100 9B00     		lsls	r3, r3, #2
 258 0102 1340     		ands	r3, r2
 259 0104 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 260              		.loc 1 284 0
 261 0106 8023     		movs	r3, #128
 262 0108 5B00     		lsls	r3, r3, #1
 263 010a BB60     		str	r3, [r7, #8]
 264 010c 02E0     		b	.L12
 265              	.L11:
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 266              		.loc 1 288 0
 267 010e 8023     		movs	r3, #128
 268 0110 5B01     		lsls	r3, r3, #5
 269 0112 BB60     		str	r3, [r7, #8]
 270              	.L12:
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 271              		.loc 1 291 0
 272 0114 8023     		movs	r3, #128
 273 0116 DA00     		lsls	r2, r3, #3
 274 0118 8023     		movs	r3, #128
 275 011a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 11


 276 011c 1340     		ands	r3, r2
 277 011e 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 278              		.loc 1 298 0
 279 0120 2B4B     		ldr	r3, .L17+88
 280 0122 FA68     		ldr	r2, [r7, #12]
 281 0124 5200     		lsls	r2, r2, #1
 282 0126 0021     		movs	r1, #0
 283 0128 D152     		strh	r1, [r2, r3]
 284 012a 09E0     		b	.L14
 285              	.L13:
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 286              		.loc 1 305 0
 287 012c BB68     		ldr	r3, [r7, #8]
 288 012e 002B     		cmp	r3, #0
 289 0130 00DA     		bge	.L15
 290 0132 0133     		adds	r3, r3, #1
 291              	.L15:
 292 0134 5B10     		asrs	r3, r3, #1
 293 0136 19B2     		sxth	r1, r3
 294 0138 254B     		ldr	r3, .L17+88
 295 013a FA68     		ldr	r2, [r7, #12]
 296 013c 5200     		lsls	r2, r2, #1
 297 013e D152     		strh	r1, [r2, r3]
 298              	.L14:
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 299              		.loc 1 311 0 discriminator 2
 300 0140 BB68     		ldr	r3, [r7, #8]
 301 0142 244A     		ldr	r2, .L17+92
 302 0144 5343     		muls	r3, r2
 303 0146 244A     		ldr	r2, .L17+96
 304 0148 9446     		mov	ip, r2
 305 014a 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 306              		.loc 1 312 0 discriminator 2
 307 014c 2349     		ldr	r1, .L17+100
 308 014e 1800     		movs	r0, r3
 309 0150 FFF7FEFF 		bl	__aeabi_idiv
 310 0154 0300     		movs	r3, r0
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 12


 311              		.loc 1 311 0 discriminator 2
 312 0156 1BB2     		sxth	r3, r3
 313 0158 1900     		movs	r1, r3
 314 015a 214B     		ldr	r3, .L17+104
 315 015c FA68     		ldr	r2, [r7, #12]
 316 015e 9200     		lsls	r2, r2, #2
 317 0160 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 318              		.loc 1 232 0 discriminator 2
 319 0162 FB68     		ldr	r3, [r7, #12]
 320 0164 0133     		adds	r3, r3, #1
 321 0166 FB60     		str	r3, [r7, #12]
 322              	.L8:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 323              		.loc 1 232 0 is_stmt 0 discriminator 1
 324 0168 FB68     		ldr	r3, [r7, #12]
 325 016a 002B     		cmp	r3, #0
 326 016c 98D0     		beq	.L16
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 327              		.loc 1 314 0 is_stmt 1
 328 016e C046     		nop
 329 0170 BD46     		mov	sp, r7
 330 0172 04B0     		add	sp, sp, #16
 331              		@ sp needed
 332 0174 80BD     		pop	{r7, pc}
 333              	.L18:
 334 0176 C046     		.align	2
 335              	.L17:
 336 0178 00000000 		.word	ADC_SAR_Seq_1_ISR
 337 017c 20003A40 		.word	1077542944
 338 0180 80033A40 		.word	1077543808
 339 0184 70021051 		.word	1360003696
 340 0188 70020051 		.word	1358955120
 341 018c 00003A40 		.word	1077542912
 342 0190 04003A40 		.word	1077542916
 343 0194 84000080 		.word	-2147483516
 344 0198 18003A40 		.word	1077542936
 345 019c 0000FF0F 		.word	268369920
 346 01a0 1C003A40 		.word	1077542940
 347 01a4 10003A40 		.word	1077542928
 348 01a8 C8000200 		.word	131272
 349 01ac 14003A40 		.word	1077542932
 350 01b0 02000200 		.word	131074
 351 01b4 00033A40 		.word	1077543680
 352 01b8 28023A40 		.word	1077543464
 353 01bc 38023A40 		.word	1077543480
 354 01c0 18023A40 		.word	1077543448
 355 01c4 30003A40 		.word	1077542960
 356 01c8 FFFFFFDF 		.word	-536870913
 357 01cc 80003A40 		.word	1077543040
 358 01d0 00000000 		.word	ADC_SAR_Seq_1_offset
 359 01d4 10270000 		.word	10000
 360 01d8 E40C0000 		.word	3300
 361 01dc C8190000 		.word	6600
 362 01e0 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 363              		.cfi_endproc
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 13


 364              	.LFE3:
 365              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 366              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 367              		.align	2
 368              		.global	ADC_SAR_Seq_1_Enable
 369              		.code	16
 370              		.thumb_func
 371              		.type	ADC_SAR_Seq_1_Enable, %function
 372              	ADC_SAR_Seq_1_Enable:
 373              	.LFB4:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 374              		.loc 1 331 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378 0000 80B5     		push	{r7, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 384              		.loc 1 332 0
 385 0004 0A4B     		ldr	r3, .L23
 386 0006 1B68     		ldr	r3, [r3]
 387 0008 002B     		cmp	r3, #0
 388 000a 0EDB     		blt	.L22
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 389              		.loc 1 336 0
 390 000c C046     		nop
 391              	.L21:
 392              		.loc 1 336 0 is_stmt 0 discriminator 1
 393 000e 094B     		ldr	r3, .L23+4
 394 0010 1B68     		ldr	r3, [r3]
 395 0012 002B     		cmp	r3, #0
 396 0014 FBDB     		blt	.L21
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 14


 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 397              		.loc 1 342 0 is_stmt 1
 398 0016 064B     		ldr	r3, .L23
 399 0018 054A     		ldr	r2, .L23
 400 001a 1268     		ldr	r2, [r2]
 401 001c 8021     		movs	r1, #128
 402 001e 0906     		lsls	r1, r1, #24
 403 0020 0A43     		orrs	r2, r1
 404 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 405              		.loc 1 345 0
 406 0024 0A20     		movs	r0, #10
 407 0026 FFF7FEFF 		bl	CyDelayUs
 408              	.L22:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 409              		.loc 1 347 0
 410 002a C046     		nop
 411 002c BD46     		mov	sp, r7
 412              		@ sp needed
 413 002e 80BD     		pop	{r7, pc}
 414              	.L24:
 415              		.align	2
 416              	.L23:
 417 0030 00003A40 		.word	1077542912
 418 0034 08023A40 		.word	1077543432
 419              		.cfi_endproc
 420              	.LFE4:
 421              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 422              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 423              		.align	2
 424              		.global	ADC_SAR_Seq_1_Stop
 425              		.code	16
 426              		.thumb_func
 427              		.type	ADC_SAR_Seq_1_Stop, %function
 428              	ADC_SAR_Seq_1_Stop:
 429              	.LFB5:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 15


 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 430              		.loc 1 366 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 440              		.loc 1 367 0
 441 0004 044B     		ldr	r3, .L26
 442 0006 044A     		ldr	r2, .L26
 443 0008 1268     		ldr	r2, [r2]
 444 000a 5200     		lsls	r2, r2, #1
 445 000c 5208     		lsrs	r2, r2, #1
 446 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 447              		.loc 1 368 0
 448 0010 C046     		nop
 449 0012 BD46     		mov	sp, r7
 450              		@ sp needed
 451 0014 80BD     		pop	{r7, pc}
 452              	.L27:
 453 0016 C046     		.align	2
 454              	.L26:
 455 0018 00003A40 		.word	1077542912
 456              		.cfi_endproc
 457              	.LFE5:
 458              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 459              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 460              		.align	2
 461              		.global	ADC_SAR_Seq_1_StartConvert
 462              		.code	16
 463              		.thumb_func
 464              		.type	ADC_SAR_Seq_1_StartConvert, %function
 465              	ADC_SAR_Seq_1_StartConvert:
 466              	.LFB6:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 16


 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 467              		.loc 1 392 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 80B5     		push	{r7, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 7, -8
 474              		.cfi_offset 14, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 477              		.loc 1 394 0
 478 0004 044B     		ldr	r3, .L29
 479 0006 044A     		ldr	r2, .L29
 480 0008 1268     		ldr	r2, [r2]
 481 000a 8021     		movs	r1, #128
 482 000c 4902     		lsls	r1, r1, #9
 483 000e 0A43     		orrs	r2, r1
 484 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 485              		.loc 1 399 0
 486 0012 C046     		nop
 487 0014 BD46     		mov	sp, r7
 488              		@ sp needed
 489 0016 80BD     		pop	{r7, pc}
 490              	.L30:
 491              		.align	2
 492              	.L29:
 493 0018 04003A40 		.word	1077542916
 494              		.cfi_endproc
 495              	.LFE6:
 496              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 497              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 498              		.align	2
 499              		.global	ADC_SAR_Seq_1_StopConvert
 500              		.code	16
 501              		.thumb_func
 502              		.type	ADC_SAR_Seq_1_StopConvert, %function
 503              	ADC_SAR_Seq_1_StopConvert:
 504              	.LFB7:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 17


 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 505              		.loc 1 417 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509 0000 80B5     		push	{r7, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 7, -8
 512              		.cfi_offset 14, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 515              		.loc 1 419 0
 516 0004 044B     		ldr	r3, .L32
 517 0006 044A     		ldr	r2, .L32
 518 0008 1268     		ldr	r2, [r2]
 519 000a 0449     		ldr	r1, .L32+4
 520 000c 0A40     		ands	r2, r1
 521 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 522              		.loc 1 421 0
 523 0010 C046     		nop
 524 0012 BD46     		mov	sp, r7
 525              		@ sp needed
 526 0014 80BD     		pop	{r7, pc}
 527              	.L33:
 528 0016 C046     		.align	2
 529              	.L32:
 530 0018 04003A40 		.word	1077542916
 531 001c FFFFFEFF 		.word	-65537
 532              		.cfi_endproc
 533              	.LFE7:
 534              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 535              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 536              		.align	2
 537              		.global	ADC_SAR_Seq_1_IsEndConversion
 538              		.code	16
 539              		.thumb_func
 540              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 541              	ADC_SAR_Seq_1_IsEndConversion:
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 18


 542              	.LFB8:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 543              		.loc 1 451 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 16
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 84B0     		sub	sp, sp, #16
 552              		.cfi_def_cfa_offset 24
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 556              		.loc 1 452 0
 557 0008 0023     		movs	r3, #0
 558 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 559              		.loc 1 454 0
 560 000c 7B68     		ldr	r3, [r7, #4]
 561 000e 0322     		movs	r2, #3
 562 0010 1340     		ands	r3, r2
 563 0012 11D0     		beq	.L35
 564              	.L37:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 19


 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 565              		.loc 1 458 0 discriminator 2
 566 0014 0B4B     		ldr	r3, .L39
 567 0016 1B68     		ldr	r3, [r3]
 568 0018 0122     		movs	r2, #1
 569 001a 1340     		ands	r3, r2
 570 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 571              		.loc 1 459 0 discriminator 2
 572 001e FB68     		ldr	r3, [r7, #12]
 573 0020 002B     		cmp	r3, #0
 574 0022 03D1     		bne	.L36
 575              		.loc 1 459 0 is_stmt 0 discriminator 1
 576 0024 7B68     		ldr	r3, [r7, #4]
 577 0026 0222     		movs	r2, #2
 578 0028 1340     		ands	r3, r2
 579 002a F3D1     		bne	.L37
 580              	.L36:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 581              		.loc 1 461 0 is_stmt 1
 582 002c FB68     		ldr	r3, [r7, #12]
 583 002e 002B     		cmp	r3, #0
 584 0030 02D0     		beq	.L35
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 585              		.loc 1 464 0
 586 0032 044B     		ldr	r3, .L39
 587 0034 0122     		movs	r2, #1
 588 0036 1A60     		str	r2, [r3]
 589              	.L35:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 590              		.loc 1 485 0
 591 0038 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 20


 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 592              		.loc 1 486 0
 593 003a 1800     		movs	r0, r3
 594 003c BD46     		mov	sp, r7
 595 003e 04B0     		add	sp, sp, #16
 596              		@ sp needed
 597 0040 80BD     		pop	{r7, pc}
 598              	.L40:
 599 0042 C046     		.align	2
 600              	.L39:
 601 0044 10023A40 		.word	1077543440
 602              		.cfi_endproc
 603              	.LFE8:
 604              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 605              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 606              		.align	2
 607              		.global	ADC_SAR_Seq_1_GetResult16
 608              		.code	16
 609              		.thumb_func
 610              		.type	ADC_SAR_Seq_1_GetResult16, %function
 611              	ADC_SAR_Seq_1_GetResult16:
 612              	.LFB9:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 613              		.loc 1 505 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 16
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617 0000 80B5     		push	{r7, lr}
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 84B0     		sub	sp, sp, #16
 622              		.cfi_def_cfa_offset 24
 623 0004 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
 625 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 21


 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 626              		.loc 1 509 0
 627 0008 7B68     		ldr	r3, [r7, #4]
 628 000a 002B     		cmp	r3, #0
 629 000c 02D0     		beq	.L42
 630              		.loc 1 509 0 is_stmt 0 discriminator 1
 631 000e 0020     		movs	r0, #0
 632 0010 FFF7FEFF 		bl	CyHalt
 633              	.L42:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 634              		.loc 1 511 0 is_stmt 1
 635 0014 7B68     		ldr	r3, [r7, #4]
 636 0016 002B     		cmp	r3, #0
 637 0018 09D1     		bne	.L43
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 638              		.loc 1 513 0
 639 001a 7B68     		ldr	r3, [r7, #4]
 640 001c 9B00     		lsls	r3, r3, #2
 641 001e 084A     		ldr	r2, .L46
 642 0020 9446     		mov	ip, r2
 643 0022 6344     		add	r3, r3, ip
 644 0024 1B68     		ldr	r3, [r3]
 645 0026 1B04     		lsls	r3, r3, #16
 646 0028 1B0C     		lsrs	r3, r3, #16
 647 002a FB60     		str	r3, [r7, #12]
 648 002c 01E0     		b	.L44
 649              	.L43:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 650              		.loc 1 521 0
 651 002e 0023     		movs	r3, #0
 652 0030 FB60     		str	r3, [r7, #12]
 653              	.L44:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 654              		.loc 1 525 0
 655 0032 FB68     		ldr	r3, [r7, #12]
 656 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 657              		.loc 1 526 0
 658 0036 1800     		movs	r0, r3
 659 0038 BD46     		mov	sp, r7
 660 003a 04B0     		add	sp, sp, #16
 661              		@ sp needed
 662 003c 80BD     		pop	{r7, pc}
 663              	.L47:
 664 003e C046     		.align	2
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 22


 665              	.L46:
 666 0040 80013A40 		.word	1077543296
 667              		.cfi_endproc
 668              	.LFE9:
 669              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 670              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 671              		.align	2
 672              		.global	ADC_SAR_Seq_1_SetChanMask
 673              		.code	16
 674              		.thumb_func
 675              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 676              	ADC_SAR_Seq_1_SetChanMask:
 677              	.LFB10:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 678              		.loc 1 550 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 8
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 82B0     		sub	sp, sp, #8
 687              		.cfi_def_cfa_offset 16
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 691              		.loc 1 551 0
 692 0008 044B     		ldr	r3, .L49
 693 000a 7A68     		ldr	r2, [r7, #4]
 694 000c 0121     		movs	r1, #1
 695 000e 0A40     		ands	r2, r1
 696 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 23


 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 697              		.loc 1 552 0
 698 0012 C046     		nop
 699 0014 BD46     		mov	sp, r7
 700 0016 02B0     		add	sp, sp, #8
 701              		@ sp needed
 702 0018 80BD     		pop	{r7, pc}
 703              	.L50:
 704 001a C046     		.align	2
 705              	.L49:
 706 001c 20003A40 		.word	1077542944
 707              		.cfi_endproc
 708              	.LFE10:
 709              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 710              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 711              		.align	2
 712              		.global	ADC_SAR_Seq_1_SetLowLimit
 713              		.code	16
 714              		.thumb_func
 715              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 716              	ADC_SAR_Seq_1_SetLowLimit:
 717              	.LFB11:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 24


 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 718              		.loc 1 594 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722 0000 80B5     		push	{r7, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 82B0     		sub	sp, sp, #8
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 730 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 731              		.loc 1 595 0
 732 0008 084B     		ldr	r3, .L52
 733 000a 084A     		ldr	r2, .L52
 734 000c 1268     		ldr	r2, [r2]
 735 000e 120C     		lsrs	r2, r2, #16
 736 0010 1204     		lsls	r2, r2, #16
 737 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 738              		.loc 1 596 0
 739 0014 054B     		ldr	r3, .L52
 740 0016 054A     		ldr	r2, .L52
 741 0018 1168     		ldr	r1, [r2]
 742 001a 7A68     		ldr	r2, [r7, #4]
 743 001c 1204     		lsls	r2, r2, #16
 744 001e 120C     		lsrs	r2, r2, #16
 745 0020 0A43     		orrs	r2, r1
 746 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 747              		.loc 1 597 0
 748 0024 C046     		nop
 749 0026 BD46     		mov	sp, r7
 750 0028 02B0     		add	sp, sp, #8
 751              		@ sp needed
 752 002a 80BD     		pop	{r7, pc}
 753              	.L53:
 754              		.align	2
 755              	.L52:
 756 002c 18003A40 		.word	1077542936
 757              		.cfi_endproc
 758              	.LFE11:
 759              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 760              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 761              		.align	2
 762              		.global	ADC_SAR_Seq_1_SetHighLimit
 763              		.code	16
 764              		.thumb_func
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 25


 765              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 766              	ADC_SAR_Seq_1_SetHighLimit:
 767              	.LFB12:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 768              		.loc 1 615 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 8
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772 0000 80B5     		push	{r7, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 7, -8
 775              		.cfi_offset 14, -4
 776 0002 82B0     		sub	sp, sp, #8
 777              		.cfi_def_cfa_offset 16
 778 0004 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
 780 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 781              		.loc 1 616 0
 782 0008 084B     		ldr	r3, .L55
 783 000a 084A     		ldr	r2, .L55
 784 000c 1268     		ldr	r2, [r2]
 785 000e 1204     		lsls	r2, r2, #16
 786 0010 120C     		lsrs	r2, r2, #16
 787 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 788              		.loc 1 617 0
 789 0014 054B     		ldr	r3, .L55
 790 0016 054A     		ldr	r2, .L55
 791 0018 1168     		ldr	r1, [r2]
 792 001a 7A68     		ldr	r2, [r7, #4]
 793 001c 1204     		lsls	r2, r2, #16
 794 001e 0A43     		orrs	r2, r1
 795 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 796              		.loc 1 618 0
 797 0022 C046     		nop
 798 0024 BD46     		mov	sp, r7
 799 0026 02B0     		add	sp, sp, #8
 800              		@ sp needed
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 26


 801 0028 80BD     		pop	{r7, pc}
 802              	.L56:
 803 002a C046     		.align	2
 804              	.L55:
 805 002c 18003A40 		.word	1077542936
 806              		.cfi_endproc
 807              	.LFE12:
 808              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 809              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 810              		.align	2
 811              		.global	ADC_SAR_Seq_1_SetLimitMask
 812              		.code	16
 813              		.thumb_func
 814              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 815              	ADC_SAR_Seq_1_SetLimitMask:
 816              	.LFB13:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 817              		.loc 1 639 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 8
 820              		@ frame_needed = 1, uses_anonymous_args = 0
 821 0000 80B5     		push	{r7, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825 0002 82B0     		sub	sp, sp, #8
 826              		.cfi_def_cfa_offset 16
 827 0004 00AF     		add	r7, sp, #0
 828              		.cfi_def_cfa_register 7
 829 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 830              		.loc 1 640 0
 831 0008 044B     		ldr	r3, .L58
 832 000a 7A68     		ldr	r2, [r7, #4]
 833 000c 0121     		movs	r1, #1
 834 000e 0A40     		ands	r2, r1
 835 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 27


 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 836              		.loc 1 641 0
 837 0012 C046     		nop
 838 0014 BD46     		mov	sp, r7
 839 0016 02B0     		add	sp, sp, #8
 840              		@ sp needed
 841 0018 80BD     		pop	{r7, pc}
 842              	.L59:
 843 001a C046     		.align	2
 844              	.L58:
 845 001c 38023A40 		.word	1077543480
 846              		.cfi_endproc
 847              	.LFE13:
 848              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 849              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 850              		.align	2
 851              		.global	ADC_SAR_Seq_1_SetSatMask
 852              		.code	16
 853              		.thumb_func
 854              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 855              	ADC_SAR_Seq_1_SetSatMask:
 856              	.LFB14:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 857              		.loc 1 662 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 8
 860              		@ frame_needed = 1, uses_anonymous_args = 0
 861 0000 80B5     		push	{r7, lr}
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0002 82B0     		sub	sp, sp, #8
 866              		.cfi_def_cfa_offset 16
 867 0004 00AF     		add	r7, sp, #0
 868              		.cfi_def_cfa_register 7
 869 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 28


 870              		.loc 1 663 0
 871 0008 044B     		ldr	r3, .L61
 872 000a 7A68     		ldr	r2, [r7, #4]
 873 000c 0121     		movs	r1, #1
 874 000e 0A40     		ands	r2, r1
 875 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 876              		.loc 1 664 0
 877 0012 C046     		nop
 878 0014 BD46     		mov	sp, r7
 879 0016 02B0     		add	sp, sp, #8
 880              		@ sp needed
 881 0018 80BD     		pop	{r7, pc}
 882              	.L62:
 883 001a C046     		.align	2
 884              	.L61:
 885 001c 28023A40 		.word	1077543464
 886              		.cfi_endproc
 887              	.LFE14:
 888              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 889              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 890              		.align	2
 891              		.global	ADC_SAR_Seq_1_SetOffset
 892              		.code	16
 893              		.thumb_func
 894              		.type	ADC_SAR_Seq_1_SetOffset, %function
 895              	ADC_SAR_Seq_1_SetOffset:
 896              	.LFB15:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 897              		.loc 1 690 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 29


 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901 0000 80B5     		push	{r7, lr}
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 7, -8
 904              		.cfi_offset 14, -4
 905 0002 82B0     		sub	sp, sp, #8
 906              		.cfi_def_cfa_offset 16
 907 0004 00AF     		add	r7, sp, #0
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
 910 0008 0A00     		movs	r2, r1
 911 000a BB1C     		adds	r3, r7, #2
 912 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 913              		.loc 1 692 0
 914 000e 7B68     		ldr	r3, [r7, #4]
 915 0010 002B     		cmp	r3, #0
 916 0012 02D0     		beq	.L64
 917              		.loc 1 692 0 is_stmt 0 discriminator 1
 918 0014 0020     		movs	r0, #0
 919 0016 FFF7FEFF 		bl	CyHalt
 920              	.L64:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 921              		.loc 1 694 0 is_stmt 1
 922 001a 054B     		ldr	r3, .L65
 923 001c 7A68     		ldr	r2, [r7, #4]
 924 001e 5200     		lsls	r2, r2, #1
 925 0020 B91C     		adds	r1, r7, #2
 926 0022 0988     		ldrh	r1, [r1]
 927 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 928              		.loc 1 695 0
 929 0026 C046     		nop
 930 0028 BD46     		mov	sp, r7
 931 002a 02B0     		add	sp, sp, #8
 932              		@ sp needed
 933 002c 80BD     		pop	{r7, pc}
 934              	.L66:
 935 002e C046     		.align	2
 936              	.L65:
 937 0030 00000000 		.word	ADC_SAR_Seq_1_offset
 938              		.cfi_endproc
 939              	.LFE15:
 940              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 941              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 942              		.align	2
 943              		.global	ADC_SAR_Seq_1_SetGain
 944              		.code	16
 945              		.thumb_func
 946              		.type	ADC_SAR_Seq_1_SetGain, %function
 947              	ADC_SAR_Seq_1_SetGain:
 948              	.LFB16:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 30


 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 949              		.loc 1 724 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 8
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953 0000 80B5     		push	{r7, lr}
 954              		.cfi_def_cfa_offset 8
 955              		.cfi_offset 7, -8
 956              		.cfi_offset 14, -4
 957 0002 82B0     		sub	sp, sp, #8
 958              		.cfi_def_cfa_offset 16
 959 0004 00AF     		add	r7, sp, #0
 960              		.cfi_def_cfa_register 7
 961 0006 7860     		str	r0, [r7, #4]
 962 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 963              		.loc 1 726 0
 964 000a 7B68     		ldr	r3, [r7, #4]
 965 000c 002B     		cmp	r3, #0
 966 000e 02D0     		beq	.L68
 967              		.loc 1 726 0 is_stmt 0 discriminator 1
 968 0010 0020     		movs	r0, #0
 969 0012 FFF7FEFF 		bl	CyHalt
 970              	.L68:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 971              		.loc 1 728 0 is_stmt 1
 972 0016 044B     		ldr	r3, .L69
 973 0018 7A68     		ldr	r2, [r7, #4]
 974 001a 9200     		lsls	r2, r2, #2
 975 001c 3968     		ldr	r1, [r7]
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 31


 976 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 977              		.loc 1 729 0
 978 0020 C046     		nop
 979 0022 BD46     		mov	sp, r7
 980 0024 02B0     		add	sp, sp, #8
 981              		@ sp needed
 982 0026 80BD     		pop	{r7, pc}
 983              	.L70:
 984              		.align	2
 985              	.L69:
 986 0028 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 987              		.cfi_endproc
 988              	.LFE16:
 989              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 990              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 991              		.align	2
 992              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 993              		.code	16
 994              		.thumb_func
 995              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 996              	ADC_SAR_Seq_1_CountsTo_mVolts:
 997              	.LFB17:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 998              		.loc 1 757 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 16
 1001              		@ frame_needed = 1, uses_anonymous_args = 0
 1002 0000 80B5     		push	{r7, lr}
 1003              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 32


 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
 1006 0002 84B0     		sub	sp, sp, #16
 1007              		.cfi_def_cfa_offset 24
 1008 0004 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
 1011 0008 0A00     		movs	r2, r1
 1012 000a BB1C     		adds	r3, r7, #2
 1013 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1014              		.loc 1 761 0
 1015 000e 7B68     		ldr	r3, [r7, #4]
 1016 0010 002B     		cmp	r3, #0
 1017 0012 02D0     		beq	.L72
 1018              		.loc 1 761 0 is_stmt 0 discriminator 1
 1019 0014 0020     		movs	r0, #0
 1020 0016 FFF7FEFF 		bl	CyHalt
 1021              	.L72:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1022              		.loc 1 772 0 is_stmt 1
 1023 001a 1E4B     		ldr	r3, .L78
 1024 001c 7A68     		ldr	r2, [r7, #4]
 1025 001e 5200     		lsls	r2, r2, #1
 1026 0020 D35A     		ldrh	r3, [r2, r3]
 1027 0022 19B2     		sxth	r1, r3
 1028 0024 BB1C     		adds	r3, r7, #2
 1029 0026 1A88     		ldrh	r2, [r3]
 1030 0028 8BB2     		uxth	r3, r1
 1031 002a D31A     		subs	r3, r2, r3
 1032 002c 9AB2     		uxth	r2, r3
 1033 002e BB1C     		adds	r3, r7, #2
 1034 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1035              		.loc 1 774 0
 1036 0032 BB1C     		adds	r3, r7, #2
 1037 0034 0022     		movs	r2, #0
 1038 0036 9B5E     		ldrsh	r3, [r3, r2]
 1039 0038 174A     		ldr	r2, .L78+4
 1040 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 1041              		.loc 1 775 0
 1042 003c BB1C     		adds	r3, r7, #2
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 33


 1043 003e 0021     		movs	r1, #0
 1044 0040 5B5E     		ldrsh	r3, [r3, r1]
 1045 0042 002B     		cmp	r3, #0
 1046 0044 08DD     		ble	.L73
 1047              		.loc 1 775 0 is_stmt 0 discriminator 1
 1048 0046 154B     		ldr	r3, .L78+8
 1049 0048 7968     		ldr	r1, [r7, #4]
 1050 004a 8900     		lsls	r1, r1, #2
 1051 004c CB58     		ldr	r3, [r1, r3]
 1052 004e 002B     		cmp	r3, #0
 1053 0050 00DA     		bge	.L74
 1054 0052 0133     		adds	r3, r3, #1
 1055              	.L74:
 1056 0054 5B10     		asrs	r3, r3, #1
 1057 0056 08E0     		b	.L75
 1058              	.L73:
 1059              		.loc 1 775 0 discriminator 2
 1060 0058 104B     		ldr	r3, .L78+8
 1061 005a 7968     		ldr	r1, [r7, #4]
 1062 005c 8900     		lsls	r1, r1, #2
 1063 005e CB58     		ldr	r3, [r1, r3]
 1064 0060 002B     		cmp	r3, #0
 1065 0062 00DA     		bge	.L76
 1066 0064 0133     		adds	r3, r3, #1
 1067              	.L76:
 1068 0066 5B10     		asrs	r3, r3, #1
 1069 0068 5B42     		rsbs	r3, r3, #0
 1070              	.L75:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 1071              		.loc 1 774 0 is_stmt 1
 1072 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 1073              		.loc 1 776 0
 1074 006c 0B4B     		ldr	r3, .L78+8
 1075 006e 7A68     		ldr	r2, [r7, #4]
 1076 0070 9200     		lsls	r2, r2, #2
 1077 0072 D358     		ldr	r3, [r2, r3]
 1078 0074 1900     		movs	r1, r3
 1079 0076 FFF7FEFF 		bl	__aeabi_idiv
 1080 007a 0300     		movs	r3, r0
 1081 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 1082              		.loc 1 774 0
 1083 007e 0E23     		movs	r3, #14
 1084 0080 FB18     		adds	r3, r7, r3
 1085 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 1086              		.loc 1 778 0
 1087 0084 0E23     		movs	r3, #14
 1088 0086 FB18     		adds	r3, r7, r3
 1089 0088 0022     		movs	r2, #0
 1090 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1091              		.loc 1 779 0
 1092 008c 1800     		movs	r0, r3
 1093 008e BD46     		mov	sp, r7
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 34


 1094 0090 04B0     		add	sp, sp, #16
 1095              		@ sp needed
 1096 0092 80BD     		pop	{r7, pc}
 1097              	.L79:
 1098              		.align	2
 1099              	.L78:
 1100 0094 00000000 		.word	ADC_SAR_Seq_1_offset
 1101 0098 10270000 		.word	10000
 1102 009c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1103              		.cfi_endproc
 1104              	.LFE17:
 1105              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 1106              		.global	__aeabi_lmul
 1107              		.global	__aeabi_ldivmod
 1108              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 1109              		.align	2
 1110              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 1114              	ADC_SAR_Seq_1_CountsTo_uVolts:
 1115              	.LFB18:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 1116              		.loc 1 811 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 35


 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 B0B5     		push	{r4, r5, r7, lr}
 1121              		.cfi_def_cfa_offset 16
 1122              		.cfi_offset 4, -16
 1123              		.cfi_offset 5, -12
 1124              		.cfi_offset 7, -8
 1125              		.cfi_offset 14, -4
 1126 0002 86B0     		sub	sp, sp, #24
 1127              		.cfi_def_cfa_offset 40
 1128 0004 00AF     		add	r7, sp, #0
 1129              		.cfi_def_cfa_register 7
 1130 0006 F860     		str	r0, [r7, #12]
 1131 0008 0A00     		movs	r2, r1
 1132 000a 0A23     		movs	r3, #10
 1133 000c FB18     		adds	r3, r7, r3
 1134 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1135              		.loc 1 815 0
 1136 0010 FB68     		ldr	r3, [r7, #12]
 1137 0012 002B     		cmp	r3, #0
 1138 0014 02D0     		beq	.L81
 1139              		.loc 1 815 0 is_stmt 0 discriminator 1
 1140 0016 0020     		movs	r0, #0
 1141 0018 FFF7FEFF 		bl	CyHalt
 1142              	.L81:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1143              		.loc 1 826 0 is_stmt 1
 1144 001c 194B     		ldr	r3, .L83
 1145 001e FA68     		ldr	r2, [r7, #12]
 1146 0020 5200     		lsls	r2, r2, #1
 1147 0022 D35A     		ldrh	r3, [r2, r3]
 1148 0024 19B2     		sxth	r1, r3
 1149 0026 0A23     		movs	r3, #10
 1150 0028 FB18     		adds	r3, r7, r3
 1151 002a 1A88     		ldrh	r2, [r3]
 1152 002c 8BB2     		uxth	r3, r1
 1153 002e D31A     		subs	r3, r2, r3
 1154 0030 9AB2     		uxth	r2, r3
 1155 0032 0A23     		movs	r3, #10
 1156 0034 FB18     		adds	r3, r7, r3
 1157 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 1158              		.loc 1 828 0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 36


 1159 0038 0A23     		movs	r3, #10
 1160 003a FB18     		adds	r3, r7, r3
 1161 003c 1B88     		ldrh	r3, [r3]
 1162 003e 1BB2     		sxth	r3, r3
 1163 0040 3B60     		str	r3, [r7]
 1164 0042 DB17     		asrs	r3, r3, #31
 1165 0044 7B60     		str	r3, [r7, #4]
 1166 0046 104A     		ldr	r2, .L83+4
 1167 0048 0023     		movs	r3, #0
 1168 004a 3868     		ldr	r0, [r7]
 1169 004c 7968     		ldr	r1, [r7, #4]
 1170 004e FFF7FEFF 		bl	__aeabi_lmul
 1171 0052 0200     		movs	r2, r0
 1172 0054 0B00     		movs	r3, r1
 1173 0056 1000     		movs	r0, r2
 1174 0058 1900     		movs	r1, r3
 1175 005a 0C4B     		ldr	r3, .L83+8
 1176 005c FA68     		ldr	r2, [r7, #12]
 1177 005e 9200     		lsls	r2, r2, #2
 1178 0060 D358     		ldr	r3, [r2, r3]
 1179 0062 1C00     		movs	r4, r3
 1180 0064 DB17     		asrs	r3, r3, #31
 1181 0066 1D00     		movs	r5, r3
 1182 0068 2200     		movs	r2, r4
 1183 006a 2B00     		movs	r3, r5
 1184 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1185 0070 0300     		movs	r3, r0
 1186 0072 0C00     		movs	r4, r1
 1187 0074 3B61     		str	r3, [r7, #16]
 1188 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 1189              		.loc 1 830 0
 1190 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1191              		.loc 1 831 0
 1192 007a 1800     		movs	r0, r3
 1193 007c BD46     		mov	sp, r7
 1194 007e 06B0     		add	sp, sp, #24
 1195              		@ sp needed
 1196 0080 B0BD     		pop	{r4, r5, r7, pc}
 1197              	.L84:
 1198 0082 C046     		.align	2
 1199              	.L83:
 1200 0084 00000000 		.word	ADC_SAR_Seq_1_offset
 1201 0088 80969800 		.word	10000000
 1202 008c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1203              		.cfi_endproc
 1204              	.LFE18:
 1205              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 1206              		.global	__aeabi_i2f
 1207              		.global	__aeabi_fmul
 1208              		.global	__aeabi_fdiv
 1209              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 1210              		.align	2
 1211              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 1212              		.code	16
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 37


 1213              		.thumb_func
 1214              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 1215              	ADC_SAR_Seq_1_CountsTo_Volts:
 1216              	.LFB19:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 1217              		.loc 1 856 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 16
 1220              		@ frame_needed = 1, uses_anonymous_args = 0
 1221 0000 90B5     		push	{r4, r7, lr}
 1222              		.cfi_def_cfa_offset 12
 1223              		.cfi_offset 4, -12
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 85B0     		sub	sp, sp, #20
 1227              		.cfi_def_cfa_offset 32
 1228 0004 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 1230 0006 7860     		str	r0, [r7, #4]
 1231 0008 0A00     		movs	r2, r1
 1232 000a BB1C     		adds	r3, r7, #2
 1233 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1234              		.loc 1 860 0
 1235 000e 7B68     		ldr	r3, [r7, #4]
 1236 0010 002B     		cmp	r3, #0
 1237 0012 02D0     		beq	.L86
 1238              		.loc 1 860 0 is_stmt 0 discriminator 1
 1239 0014 0020     		movs	r0, #0
 1240 0016 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 38


 1241              	.L86:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1242              		.loc 1 871 0 is_stmt 1
 1243 001a 164B     		ldr	r3, .L88
 1244 001c 7A68     		ldr	r2, [r7, #4]
 1245 001e 5200     		lsls	r2, r2, #1
 1246 0020 D35A     		ldrh	r3, [r2, r3]
 1247 0022 19B2     		sxth	r1, r3
 1248 0024 BB1C     		adds	r3, r7, #2
 1249 0026 1A88     		ldrh	r2, [r3]
 1250 0028 8BB2     		uxth	r3, r1
 1251 002a D31A     		subs	r3, r2, r3
 1252 002c 9AB2     		uxth	r2, r3
 1253 002e BB1C     		adds	r3, r7, #2
 1254 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 1255              		.loc 1 873 0
 1256 0032 BB1C     		adds	r3, r7, #2
 1257 0034 0022     		movs	r2, #0
 1258 0036 9B5E     		ldrsh	r3, [r3, r2]
 1259 0038 1800     		movs	r0, r3
 1260 003a FFF7FEFF 		bl	__aeabi_i2f
 1261 003e 031C     		adds	r3, r0, #0
 1262 0040 0D49     		ldr	r1, .L88+4
 1263 0042 181C     		adds	r0, r3, #0
 1264 0044 FFF7FEFF 		bl	__aeabi_fmul
 1265 0048 031C     		adds	r3, r0, #0
 1266 004a 1C1C     		adds	r4, r3, #0
 1267 004c 0B4B     		ldr	r3, .L88+8
 1268 004e 7A68     		ldr	r2, [r7, #4]
 1269 0050 9200     		lsls	r2, r2, #2
 1270 0052 D358     		ldr	r3, [r2, r3]
 1271 0054 1800     		movs	r0, r3
 1272 0056 FFF7FEFF 		bl	__aeabi_i2f
 1273 005a 031C     		adds	r3, r0, #0
 1274 005c 191C     		adds	r1, r3, #0
 1275 005e 201C     		adds	r0, r4, #0
 1276 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1277 0064 031C     		adds	r3, r0, #0
 1278 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 1279              		.loc 1 875 0
 1280 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1281              		.loc 1 876 0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 39


 1282 006a 181C     		adds	r0, r3, #0
 1283 006c BD46     		mov	sp, r7
 1284 006e 05B0     		add	sp, sp, #20
 1285              		@ sp needed
 1286 0070 90BD     		pop	{r4, r7, pc}
 1287              	.L89:
 1288 0072 C046     		.align	2
 1289              	.L88:
 1290 0074 00000000 		.word	ADC_SAR_Seq_1_offset
 1291 0078 00002041 		.word	1092616192
 1292 007c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1293              		.cfi_endproc
 1294              	.LFE19:
 1295              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 1296              		.text
 1297              	.Letext0:
 1298              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1299              		.section	.debug_info,"",%progbits
 1300              	.Ldebug_info0:
 1301 0000 8D040000 		.4byte	0x48d
 1302 0004 0400     		.2byte	0x4
 1303 0006 00000000 		.4byte	.Ldebug_abbrev0
 1304 000a 04       		.byte	0x4
 1305 000b 01       		.uleb128 0x1
 1306 000c 26020000 		.4byte	.LASF60
 1307 0010 0C       		.byte	0xc
 1308 0011 25030000 		.4byte	.LASF61
 1309 0015 3E000000 		.4byte	.LASF62
 1310 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1311 001d 00000000 		.4byte	0
 1312 0021 00000000 		.4byte	.Ldebug_line0
 1313 0025 02       		.uleb128 0x2
 1314 0026 01       		.byte	0x1
 1315 0027 06       		.byte	0x6
 1316 0028 17010000 		.4byte	.LASF0
 1317 002c 02       		.uleb128 0x2
 1318 002d 01       		.byte	0x1
 1319 002e 08       		.byte	0x8
 1320 002f 85030000 		.4byte	.LASF1
 1321 0033 02       		.uleb128 0x2
 1322 0034 02       		.byte	0x2
 1323 0035 05       		.byte	0x5
 1324 0036 93030000 		.4byte	.LASF2
 1325 003a 02       		.uleb128 0x2
 1326 003b 02       		.byte	0x2
 1327 003c 07       		.byte	0x7
 1328 003d F6010000 		.4byte	.LASF3
 1329 0041 02       		.uleb128 0x2
 1330 0042 04       		.byte	0x4
 1331 0043 05       		.byte	0x5
 1332 0044 62010000 		.4byte	.LASF4
 1333 0048 02       		.uleb128 0x2
 1334 0049 04       		.byte	0x4
 1335 004a 07       		.byte	0x7
 1336 004b D4010000 		.4byte	.LASF5
 1337 004f 02       		.uleb128 0x2
 1338 0050 08       		.byte	0x8
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 40


 1339 0051 05       		.byte	0x5
 1340 0052 09010000 		.4byte	.LASF6
 1341 0056 02       		.uleb128 0x2
 1342 0057 08       		.byte	0x8
 1343 0058 07       		.byte	0x7
 1344 0059 C3000000 		.4byte	.LASF7
 1345 005d 03       		.uleb128 0x3
 1346 005e 04       		.byte	0x4
 1347 005f 05       		.byte	0x5
 1348 0060 696E7400 		.ascii	"int\000"
 1349 0064 02       		.uleb128 0x2
 1350 0065 04       		.byte	0x4
 1351 0066 07       		.byte	0x7
 1352 0067 C0010000 		.4byte	.LASF8
 1353 006b 04       		.uleb128 0x4
 1354 006c 6B010000 		.4byte	.LASF9
 1355 0070 02       		.byte	0x2
 1356 0071 D201     		.2byte	0x1d2
 1357 0073 2C000000 		.4byte	0x2c
 1358 0077 04       		.uleb128 0x4
 1359 0078 15000000 		.4byte	.LASF10
 1360 007c 02       		.byte	0x2
 1361 007d D301     		.2byte	0x1d3
 1362 007f 3A000000 		.4byte	0x3a
 1363 0083 04       		.uleb128 0x4
 1364 0084 78010000 		.4byte	.LASF11
 1365 0088 02       		.byte	0x2
 1366 0089 D401     		.2byte	0x1d4
 1367 008b 48000000 		.4byte	0x48
 1368 008f 04       		.uleb128 0x4
 1369 0090 4C040000 		.4byte	.LASF12
 1370 0094 02       		.byte	0x2
 1371 0095 D601     		.2byte	0x1d6
 1372 0097 33000000 		.4byte	0x33
 1373 009b 04       		.uleb128 0x4
 1374 009c 3E010000 		.4byte	.LASF13
 1375 00a0 02       		.byte	0x2
 1376 00a1 D701     		.2byte	0x1d7
 1377 00a3 41000000 		.4byte	0x41
 1378 00a7 04       		.uleb128 0x4
 1379 00a8 C1020000 		.4byte	.LASF14
 1380 00ac 02       		.byte	0x2
 1381 00ad D801     		.2byte	0x1d8
 1382 00af B3000000 		.4byte	0xb3
 1383 00b3 02       		.uleb128 0x2
 1384 00b4 04       		.byte	0x4
 1385 00b5 04       		.byte	0x4
 1386 00b6 4C030000 		.4byte	.LASF15
 1387 00ba 02       		.uleb128 0x2
 1388 00bb 08       		.byte	0x8
 1389 00bc 04       		.byte	0x4
 1390 00bd 71010000 		.4byte	.LASF16
 1391 00c1 04       		.uleb128 0x4
 1392 00c2 1F030000 		.4byte	.LASF17
 1393 00c6 02       		.byte	0x2
 1394 00c7 DD01     		.2byte	0x1dd
 1395 00c9 4F000000 		.4byte	0x4f
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 41


 1396 00cd 02       		.uleb128 0x2
 1397 00ce 01       		.byte	0x1
 1398 00cf 08       		.byte	0x8
 1399 00d0 DF030000 		.4byte	.LASF18
 1400 00d4 04       		.uleb128 0x4
 1401 00d5 BB020000 		.4byte	.LASF19
 1402 00d9 02       		.byte	0x2
 1403 00da 7E02     		.2byte	0x27e
 1404 00dc E0000000 		.4byte	0xe0
 1405 00e0 05       		.uleb128 0x5
 1406 00e1 83000000 		.4byte	0x83
 1407 00e5 02       		.uleb128 0x2
 1408 00e6 08       		.byte	0x8
 1409 00e7 04       		.byte	0x4
 1410 00e8 DB020000 		.4byte	.LASF20
 1411 00ec 02       		.uleb128 0x2
 1412 00ed 04       		.byte	0x4
 1413 00ee 07       		.byte	0x7
 1414 00ef C9020000 		.4byte	.LASF21
 1415 00f3 06       		.uleb128 0x6
 1416 00f4 AF000000 		.4byte	.LASF25
 1417 00f8 01       		.byte	0x1
 1418 00f9 3F       		.byte	0x3f
 1419 00fa 00000000 		.4byte	.LFB2
 1420 00fe 24000000 		.4byte	.LFE2-.LFB2
 1421 0102 01       		.uleb128 0x1
 1422 0103 9C       		.byte	0x9c
 1423 0104 07       		.uleb128 0x7
 1424 0105 1C000000 		.4byte	.LASF36
 1425 0109 01       		.byte	0x1
 1426 010a 5E       		.byte	0x5e
 1427 010b 00000000 		.4byte	.LFB3
 1428 010f E4010000 		.4byte	.LFE3-.LFB3
 1429 0113 01       		.uleb128 0x1
 1430 0114 9C       		.byte	0x9c
 1431 0115 44010000 		.4byte	0x144
 1432 0119 08       		.uleb128 0x8
 1433 011a D4030000 		.4byte	.LASF22
 1434 011e 01       		.byte	0x1
 1435 011f 60       		.byte	0x60
 1436 0120 83000000 		.4byte	0x83
 1437 0124 02       		.uleb128 0x2
 1438 0125 91       		.byte	0x91
 1439 0126 74       		.sleb128 -12
 1440 0127 08       		.uleb128 0x8
 1441 0128 EC010000 		.4byte	.LASF23
 1442 012c 01       		.byte	0x1
 1443 012d 61       		.byte	0x61
 1444 012e 83000000 		.4byte	0x83
 1445 0132 02       		.uleb128 0x2
 1446 0133 91       		.byte	0x91
 1447 0134 6C       		.sleb128 -20
 1448 0135 08       		.uleb128 0x8
 1449 0136 37000000 		.4byte	.LASF24
 1450 013a 01       		.byte	0x1
 1451 013b 62       		.byte	0x62
 1452 013c 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 42


 1453 0140 02       		.uleb128 0x2
 1454 0141 91       		.byte	0x91
 1455 0142 70       		.sleb128 -16
 1456 0143 00       		.byte	0
 1457 0144 09       		.uleb128 0x9
 1458 0145 DA000000 		.4byte	.LASF26
 1459 0149 01       		.byte	0x1
 1460 014a 4A01     		.2byte	0x14a
 1461 014c 00000000 		.4byte	.LFB4
 1462 0150 38000000 		.4byte	.LFE4-.LFB4
 1463 0154 01       		.uleb128 0x1
 1464 0155 9C       		.byte	0x9c
 1465 0156 0A       		.uleb128 0xa
 1466 0157 68030000 		.4byte	.LASF27
 1467 015b 01       		.byte	0x1
 1468 015c 6D01     		.2byte	0x16d
 1469 015e 00000000 		.4byte	.LFB5
 1470 0162 1C000000 		.4byte	.LFE5-.LFB5
 1471 0166 01       		.uleb128 0x1
 1472 0167 9C       		.byte	0x9c
 1473 0168 0A       		.uleb128 0xa
 1474 0169 7B000000 		.4byte	.LASF28
 1475 016d 01       		.byte	0x1
 1476 016e 8701     		.2byte	0x187
 1477 0170 00000000 		.4byte	.LFB6
 1478 0174 1C000000 		.4byte	.LFE6-.LFB6
 1479 0178 01       		.uleb128 0x1
 1480 0179 9C       		.byte	0x9c
 1481 017a 0A       		.uleb128 0xa
 1482 017b 05030000 		.4byte	.LASF29
 1483 017f 01       		.byte	0x1
 1484 0180 A001     		.2byte	0x1a0
 1485 0182 00000000 		.4byte	.LFB7
 1486 0186 20000000 		.4byte	.LFE7-.LFB7
 1487 018a 01       		.uleb128 0x1
 1488 018b 9C       		.byte	0x9c
 1489 018c 0B       		.uleb128 0xb
 1490 018d E7020000 		.4byte	.LASF31
 1491 0191 01       		.byte	0x1
 1492 0192 C201     		.2byte	0x1c2
 1493 0194 83000000 		.4byte	0x83
 1494 0198 00000000 		.4byte	.LFB8
 1495 019c 48000000 		.4byte	.LFE8-.LFB8
 1496 01a0 01       		.uleb128 0x1
 1497 01a1 9C       		.byte	0x9c
 1498 01a2 C5010000 		.4byte	0x1c5
 1499 01a6 0C       		.uleb128 0xc
 1500 01a7 A2010000 		.4byte	.LASF33
 1501 01ab 01       		.byte	0x1
 1502 01ac C201     		.2byte	0x1c2
 1503 01ae 83000000 		.4byte	0x83
 1504 01b2 02       		.uleb128 0x2
 1505 01b3 91       		.byte	0x91
 1506 01b4 6C       		.sleb128 -20
 1507 01b5 0D       		.uleb128 0xd
 1508 01b6 2D040000 		.4byte	.LASF30
 1509 01ba 01       		.byte	0x1
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 43


 1510 01bb C401     		.2byte	0x1c4
 1511 01bd 83000000 		.4byte	0x83
 1512 01c1 02       		.uleb128 0x2
 1513 01c2 91       		.byte	0x91
 1514 01c3 74       		.sleb128 -12
 1515 01c4 00       		.byte	0
 1516 01c5 0E       		.uleb128 0xe
 1517 01c6 EF000000 		.4byte	.LASF32
 1518 01ca 01       		.byte	0x1
 1519 01cb F801     		.2byte	0x1f8
 1520 01cd 8F000000 		.4byte	0x8f
 1521 01d1 00000000 		.4byte	.LFB9
 1522 01d5 44000000 		.4byte	.LFE9-.LFB9
 1523 01d9 01       		.uleb128 0x1
 1524 01da 9C       		.byte	0x9c
 1525 01db FE010000 		.4byte	0x1fe
 1526 01df 0C       		.uleb128 0xc
 1527 01e0 DA030000 		.4byte	.LASF34
 1528 01e4 01       		.byte	0x1
 1529 01e5 F801     		.2byte	0x1f8
 1530 01e7 83000000 		.4byte	0x83
 1531 01eb 02       		.uleb128 0x2
 1532 01ec 91       		.byte	0x91
 1533 01ed 6C       		.sleb128 -20
 1534 01ee 0D       		.uleb128 0xd
 1535 01ef 6D040000 		.4byte	.LASF35
 1536 01f3 01       		.byte	0x1
 1537 01f4 FA01     		.2byte	0x1fa
 1538 01f6 83000000 		.4byte	0x83
 1539 01fa 02       		.uleb128 0x2
 1540 01fb 91       		.byte	0x91
 1541 01fc 74       		.sleb128 -12
 1542 01fd 00       		.byte	0
 1543 01fe 0F       		.uleb128 0xf
 1544 01ff BA030000 		.4byte	.LASF37
 1545 0203 01       		.byte	0x1
 1546 0204 2502     		.2byte	0x225
 1547 0206 00000000 		.4byte	.LFB10
 1548 020a 20000000 		.4byte	.LFE10-.LFB10
 1549 020e 01       		.uleb128 0x1
 1550 020f 9C       		.byte	0x9c
 1551 0210 24020000 		.4byte	0x224
 1552 0214 0C       		.uleb128 0xc
 1553 0215 7F010000 		.4byte	.LASF38
 1554 0219 01       		.byte	0x1
 1555 021a 2502     		.2byte	0x225
 1556 021c 83000000 		.4byte	0x83
 1557 0220 02       		.uleb128 0x2
 1558 0221 91       		.byte	0x91
 1559 0222 74       		.sleb128 -12
 1560 0223 00       		.byte	0
 1561 0224 0F       		.uleb128 0xf
 1562 0225 E4030000 		.4byte	.LASF39
 1563 0229 01       		.byte	0x1
 1564 022a 5102     		.2byte	0x251
 1565 022c 00000000 		.4byte	.LFB11
 1566 0230 30000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 44


 1567 0234 01       		.uleb128 0x1
 1568 0235 9C       		.byte	0x9c
 1569 0236 4A020000 		.4byte	0x24a
 1570 023a 0C       		.uleb128 0xc
 1571 023b D2020000 		.4byte	.LASF40
 1572 023f 01       		.byte	0x1
 1573 0240 5102     		.2byte	0x251
 1574 0242 83000000 		.4byte	0x83
 1575 0246 02       		.uleb128 0x2
 1576 0247 91       		.byte	0x91
 1577 0248 74       		.sleb128 -12
 1578 0249 00       		.byte	0
 1579 024a 0F       		.uleb128 0xf
 1580 024b 23010000 		.4byte	.LASF41
 1581 024f 01       		.byte	0x1
 1582 0250 6602     		.2byte	0x266
 1583 0252 00000000 		.4byte	.LFB12
 1584 0256 30000000 		.4byte	.LFE12-.LFB12
 1585 025a 01       		.uleb128 0x1
 1586 025b 9C       		.byte	0x9c
 1587 025c 70020000 		.4byte	0x270
 1588 0260 0C       		.uleb128 0xc
 1589 0261 7B030000 		.4byte	.LASF42
 1590 0265 01       		.byte	0x1
 1591 0266 6602     		.2byte	0x266
 1592 0268 83000000 		.4byte	0x83
 1593 026c 02       		.uleb128 0x2
 1594 026d 91       		.byte	0x91
 1595 026e 74       		.sleb128 -12
 1596 026f 00       		.byte	0
 1597 0270 0F       		.uleb128 0xf
 1598 0271 52040000 		.4byte	.LASF43
 1599 0275 01       		.byte	0x1
 1600 0276 7E02     		.2byte	0x27e
 1601 0278 00000000 		.4byte	.LFB13
 1602 027c 20000000 		.4byte	.LFE13-.LFB13
 1603 0280 01       		.uleb128 0x1
 1604 0281 9C       		.byte	0x9c
 1605 0282 96020000 		.4byte	0x296
 1606 0286 0C       		.uleb128 0xc
 1607 0287 7F010000 		.4byte	.LASF38
 1608 028b 01       		.byte	0x1
 1609 028c 7E02     		.2byte	0x27e
 1610 028e 83000000 		.4byte	0x83
 1611 0292 02       		.uleb128 0x2
 1612 0293 91       		.byte	0x91
 1613 0294 74       		.sleb128 -12
 1614 0295 00       		.byte	0
 1615 0296 0F       		.uleb128 0xf
 1616 0297 96000000 		.4byte	.LASF44
 1617 029b 01       		.byte	0x1
 1618 029c 9502     		.2byte	0x295
 1619 029e 00000000 		.4byte	.LFB14
 1620 02a2 20000000 		.4byte	.LFE14-.LFB14
 1621 02a6 01       		.uleb128 0x1
 1622 02a7 9C       		.byte	0x9c
 1623 02a8 BC020000 		.4byte	0x2bc
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 45


 1624 02ac 0C       		.uleb128 0xc
 1625 02ad 7F010000 		.4byte	.LASF38
 1626 02b1 01       		.byte	0x1
 1627 02b2 9502     		.2byte	0x295
 1628 02b4 83000000 		.4byte	0x83
 1629 02b8 02       		.uleb128 0x2
 1630 02b9 91       		.byte	0x91
 1631 02ba 74       		.sleb128 -12
 1632 02bb 00       		.byte	0
 1633 02bc 10       		.uleb128 0x10
 1634 02bd 34040000 		.4byte	.LASF45
 1635 02c1 01       		.byte	0x1
 1636 02c2 B102     		.2byte	0x2b1
 1637 02c4 00000000 		.4byte	.LFB15
 1638 02c8 34000000 		.4byte	.LFE15-.LFB15
 1639 02cc 01       		.uleb128 0x1
 1640 02cd 9C       		.byte	0x9c
 1641 02ce F1020000 		.4byte	0x2f1
 1642 02d2 0C       		.uleb128 0xc
 1643 02d3 DA030000 		.4byte	.LASF34
 1644 02d7 01       		.byte	0x1
 1645 02d8 B102     		.2byte	0x2b1
 1646 02da 83000000 		.4byte	0x83
 1647 02de 02       		.uleb128 0x2
 1648 02df 91       		.byte	0x91
 1649 02e0 74       		.sleb128 -12
 1650 02e1 0C       		.uleb128 0xc
 1651 02e2 FE030000 		.4byte	.LASF46
 1652 02e6 01       		.byte	0x1
 1653 02e7 B102     		.2byte	0x2b1
 1654 02e9 8F000000 		.4byte	0x8f
 1655 02ed 02       		.uleb128 0x2
 1656 02ee 91       		.byte	0x91
 1657 02ef 72       		.sleb128 -14
 1658 02f0 00       		.byte	0
 1659 02f1 10       		.uleb128 0x10
 1660 02f2 52030000 		.4byte	.LASF47
 1661 02f6 01       		.byte	0x1
 1662 02f7 D302     		.2byte	0x2d3
 1663 02f9 00000000 		.4byte	.LFB16
 1664 02fd 2C000000 		.4byte	.LFE16-.LFB16
 1665 0301 01       		.uleb128 0x1
 1666 0302 9C       		.byte	0x9c
 1667 0303 26030000 		.4byte	0x326
 1668 0307 0C       		.uleb128 0xc
 1669 0308 DA030000 		.4byte	.LASF34
 1670 030c 01       		.byte	0x1
 1671 030d D302     		.2byte	0x2d3
 1672 030f 83000000 		.4byte	0x83
 1673 0313 02       		.uleb128 0x2
 1674 0314 91       		.byte	0x91
 1675 0315 74       		.sleb128 -12
 1676 0316 0C       		.uleb128 0xc
 1677 0317 2F000000 		.4byte	.LASF48
 1678 031b 01       		.byte	0x1
 1679 031c D302     		.2byte	0x2d3
 1680 031e 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 46


 1681 0322 02       		.uleb128 0x2
 1682 0323 91       		.byte	0x91
 1683 0324 70       		.sleb128 -16
 1684 0325 00       		.byte	0
 1685 0326 0E       		.uleb128 0xe
 1686 0327 84010000 		.4byte	.LASF49
 1687 032b 01       		.byte	0x1
 1688 032c F402     		.2byte	0x2f4
 1689 032e 8F000000 		.4byte	0x8f
 1690 0332 00000000 		.4byte	.LFB17
 1691 0336 A0000000 		.4byte	.LFE17-.LFB17
 1692 033a 01       		.uleb128 0x1
 1693 033b 9C       		.byte	0x9c
 1694 033c 6E030000 		.4byte	0x36e
 1695 0340 0C       		.uleb128 0xc
 1696 0341 DA030000 		.4byte	.LASF34
 1697 0345 01       		.byte	0x1
 1698 0346 F402     		.2byte	0x2f4
 1699 0348 83000000 		.4byte	0x83
 1700 034c 02       		.uleb128 0x2
 1701 034d 91       		.byte	0x91
 1702 034e 6C       		.sleb128 -20
 1703 034f 0C       		.uleb128 0xc
 1704 0350 05040000 		.4byte	.LASF50
 1705 0354 01       		.byte	0x1
 1706 0355 F402     		.2byte	0x2f4
 1707 0357 8F000000 		.4byte	0x8f
 1708 035b 02       		.uleb128 0x2
 1709 035c 91       		.byte	0x91
 1710 035d 6A       		.sleb128 -22
 1711 035e 0D       		.uleb128 0xd
 1712 035f B4020000 		.4byte	.LASF51
 1713 0363 01       		.byte	0x1
 1714 0364 F602     		.2byte	0x2f6
 1715 0366 8F000000 		.4byte	0x8f
 1716 036a 02       		.uleb128 0x2
 1717 036b 91       		.byte	0x91
 1718 036c 76       		.sleb128 -10
 1719 036d 00       		.byte	0
 1720 036e 0E       		.uleb128 0xe
 1721 036f 44010000 		.4byte	.LASF52
 1722 0373 01       		.byte	0x1
 1723 0374 2A03     		.2byte	0x32a
 1724 0376 9B000000 		.4byte	0x9b
 1725 037a 00000000 		.4byte	.LFB18
 1726 037e 90000000 		.4byte	.LFE18-.LFB18
 1727 0382 01       		.uleb128 0x1
 1728 0383 9C       		.byte	0x9c
 1729 0384 B6030000 		.4byte	0x3b6
 1730 0388 0C       		.uleb128 0xc
 1731 0389 DA030000 		.4byte	.LASF34
 1732 038d 01       		.byte	0x1
 1733 038e 2A03     		.2byte	0x32a
 1734 0390 83000000 		.4byte	0x83
 1735 0394 02       		.uleb128 0x2
 1736 0395 91       		.byte	0x91
 1737 0396 64       		.sleb128 -28
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 47


 1738 0397 0C       		.uleb128 0xc
 1739 0398 05040000 		.4byte	.LASF50
 1740 039c 01       		.byte	0x1
 1741 039d 2A03     		.2byte	0x32a
 1742 039f 8F000000 		.4byte	0x8f
 1743 03a3 02       		.uleb128 0x2
 1744 03a4 91       		.byte	0x91
 1745 03a5 62       		.sleb128 -30
 1746 03a6 0D       		.uleb128 0xd
 1747 03a7 CD010000 		.4byte	.LASF53
 1748 03ab 01       		.byte	0x1
 1749 03ac 2C03     		.2byte	0x32c
 1750 03ae C1000000 		.4byte	0xc1
 1751 03b2 02       		.uleb128 0x2
 1752 03b3 91       		.byte	0x91
 1753 03b4 68       		.sleb128 -24
 1754 03b5 00       		.byte	0
 1755 03b6 0E       		.uleb128 0xe
 1756 03b7 9D030000 		.4byte	.LASF54
 1757 03bb 01       		.byte	0x1
 1758 03bc 5703     		.2byte	0x357
 1759 03be A7000000 		.4byte	0xa7
 1760 03c2 00000000 		.4byte	.LFB19
 1761 03c6 80000000 		.4byte	.LFE19-.LFB19
 1762 03ca 01       		.uleb128 0x1
 1763 03cb 9C       		.byte	0x9c
 1764 03cc FE030000 		.4byte	0x3fe
 1765 03d0 0C       		.uleb128 0xc
 1766 03d1 DA030000 		.4byte	.LASF34
 1767 03d5 01       		.byte	0x1
 1768 03d6 5703     		.2byte	0x357
 1769 03d8 83000000 		.4byte	0x83
 1770 03dc 02       		.uleb128 0x2
 1771 03dd 91       		.byte	0x91
 1772 03de 64       		.sleb128 -28
 1773 03df 0C       		.uleb128 0xc
 1774 03e0 05040000 		.4byte	.LASF50
 1775 03e4 01       		.byte	0x1
 1776 03e5 5703     		.2byte	0x357
 1777 03e7 8F000000 		.4byte	0x8f
 1778 03eb 02       		.uleb128 0x2
 1779 03ec 91       		.byte	0x91
 1780 03ed 62       		.sleb128 -30
 1781 03ee 0D       		.uleb128 0xd
 1782 03ef E6010000 		.4byte	.LASF55
 1783 03f3 01       		.byte	0x1
 1784 03f4 5903     		.2byte	0x359
 1785 03f6 A7000000 		.4byte	0xa7
 1786 03fa 02       		.uleb128 0x2
 1787 03fb 91       		.byte	0x91
 1788 03fc 6C       		.sleb128 -20
 1789 03fd 00       		.byte	0
 1790 03fe 11       		.uleb128 0x11
 1791 03ff 0E040000 		.4byte	0x40e
 1792 0403 0E040000 		.4byte	0x40e
 1793 0407 12       		.uleb128 0x12
 1794 0408 EC000000 		.4byte	0xec
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 48


 1795 040c 00       		.byte	0
 1796 040d 00       		.byte	0
 1797 040e 13       		.uleb128 0x13
 1798 040f 83000000 		.4byte	0x83
 1799 0413 08       		.uleb128 0x8
 1800 0414 09020000 		.4byte	.LASF56
 1801 0418 01       		.byte	0x1
 1802 0419 21       		.byte	0x21
 1803 041a 24040000 		.4byte	0x424
 1804 041e 05       		.uleb128 0x5
 1805 041f 03       		.byte	0x3
 1806 0420 00000000 		.4byte	ADC_SAR_Seq_1_channelsConfig
 1807 0424 13       		.uleb128 0x13
 1808 0425 FE030000 		.4byte	0x3fe
 1809 0429 14       		.uleb128 0x14
 1810 042a AA010000 		.4byte	.LASF57
 1811 042e 01       		.byte	0x1
 1812 042f 18       		.byte	0x18
 1813 0430 6B000000 		.4byte	0x6b
 1814 0434 05       		.uleb128 0x5
 1815 0435 03       		.byte	0x3
 1816 0436 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1817 043a 11       		.uleb128 0x11
 1818 043b 4A040000 		.4byte	0x44a
 1819 043f 4A040000 		.4byte	0x44a
 1820 0443 12       		.uleb128 0x12
 1821 0444 EC000000 		.4byte	0xec
 1822 0448 00       		.byte	0
 1823 0449 00       		.byte	0
 1824 044a 05       		.uleb128 0x5
 1825 044b 8F000000 		.4byte	0x8f
 1826 044f 14       		.uleb128 0x14
 1827 0450 00000000 		.4byte	.LASF58
 1828 0454 01       		.byte	0x1
 1829 0455 19       		.byte	0x19
 1830 0456 60040000 		.4byte	0x460
 1831 045a 05       		.uleb128 0x5
 1832 045b 03       		.byte	0x3
 1833 045c 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1834 0460 05       		.uleb128 0x5
 1835 0461 3A040000 		.4byte	0x43a
 1836 0465 11       		.uleb128 0x11
 1837 0466 75040000 		.4byte	0x475
 1838 046a 75040000 		.4byte	0x475
 1839 046e 12       		.uleb128 0x12
 1840 046f EC000000 		.4byte	0xec
 1841 0473 00       		.byte	0
 1842 0474 00       		.byte	0
 1843 0475 05       		.uleb128 0x5
 1844 0476 9B000000 		.4byte	0x9b
 1845 047a 14       		.uleb128 0x14
 1846 047b 0F040000 		.4byte	.LASF59
 1847 047f 01       		.byte	0x1
 1848 0480 1A       		.byte	0x1a
 1849 0481 8B040000 		.4byte	0x48b
 1850 0485 05       		.uleb128 0x5
 1851 0486 03       		.byte	0x3
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 49


 1852 0487 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1853 048b 05       		.uleb128 0x5
 1854 048c 65040000 		.4byte	0x465
 1855 0490 00       		.byte	0
 1856              		.section	.debug_abbrev,"",%progbits
 1857              	.Ldebug_abbrev0:
 1858 0000 01       		.uleb128 0x1
 1859 0001 11       		.uleb128 0x11
 1860 0002 01       		.byte	0x1
 1861 0003 25       		.uleb128 0x25
 1862 0004 0E       		.uleb128 0xe
 1863 0005 13       		.uleb128 0x13
 1864 0006 0B       		.uleb128 0xb
 1865 0007 03       		.uleb128 0x3
 1866 0008 0E       		.uleb128 0xe
 1867 0009 1B       		.uleb128 0x1b
 1868 000a 0E       		.uleb128 0xe
 1869 000b 55       		.uleb128 0x55
 1870 000c 17       		.uleb128 0x17
 1871 000d 11       		.uleb128 0x11
 1872 000e 01       		.uleb128 0x1
 1873 000f 10       		.uleb128 0x10
 1874 0010 17       		.uleb128 0x17
 1875 0011 00       		.byte	0
 1876 0012 00       		.byte	0
 1877 0013 02       		.uleb128 0x2
 1878 0014 24       		.uleb128 0x24
 1879 0015 00       		.byte	0
 1880 0016 0B       		.uleb128 0xb
 1881 0017 0B       		.uleb128 0xb
 1882 0018 3E       		.uleb128 0x3e
 1883 0019 0B       		.uleb128 0xb
 1884 001a 03       		.uleb128 0x3
 1885 001b 0E       		.uleb128 0xe
 1886 001c 00       		.byte	0
 1887 001d 00       		.byte	0
 1888 001e 03       		.uleb128 0x3
 1889 001f 24       		.uleb128 0x24
 1890 0020 00       		.byte	0
 1891 0021 0B       		.uleb128 0xb
 1892 0022 0B       		.uleb128 0xb
 1893 0023 3E       		.uleb128 0x3e
 1894 0024 0B       		.uleb128 0xb
 1895 0025 03       		.uleb128 0x3
 1896 0026 08       		.uleb128 0x8
 1897 0027 00       		.byte	0
 1898 0028 00       		.byte	0
 1899 0029 04       		.uleb128 0x4
 1900 002a 16       		.uleb128 0x16
 1901 002b 00       		.byte	0
 1902 002c 03       		.uleb128 0x3
 1903 002d 0E       		.uleb128 0xe
 1904 002e 3A       		.uleb128 0x3a
 1905 002f 0B       		.uleb128 0xb
 1906 0030 3B       		.uleb128 0x3b
 1907 0031 05       		.uleb128 0x5
 1908 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 50


 1909 0033 13       		.uleb128 0x13
 1910 0034 00       		.byte	0
 1911 0035 00       		.byte	0
 1912 0036 05       		.uleb128 0x5
 1913 0037 35       		.uleb128 0x35
 1914 0038 00       		.byte	0
 1915 0039 49       		.uleb128 0x49
 1916 003a 13       		.uleb128 0x13
 1917 003b 00       		.byte	0
 1918 003c 00       		.byte	0
 1919 003d 06       		.uleb128 0x6
 1920 003e 2E       		.uleb128 0x2e
 1921 003f 00       		.byte	0
 1922 0040 3F       		.uleb128 0x3f
 1923 0041 19       		.uleb128 0x19
 1924 0042 03       		.uleb128 0x3
 1925 0043 0E       		.uleb128 0xe
 1926 0044 3A       		.uleb128 0x3a
 1927 0045 0B       		.uleb128 0xb
 1928 0046 3B       		.uleb128 0x3b
 1929 0047 0B       		.uleb128 0xb
 1930 0048 27       		.uleb128 0x27
 1931 0049 19       		.uleb128 0x19
 1932 004a 11       		.uleb128 0x11
 1933 004b 01       		.uleb128 0x1
 1934 004c 12       		.uleb128 0x12
 1935 004d 06       		.uleb128 0x6
 1936 004e 40       		.uleb128 0x40
 1937 004f 18       		.uleb128 0x18
 1938 0050 9642     		.uleb128 0x2116
 1939 0052 19       		.uleb128 0x19
 1940 0053 00       		.byte	0
 1941 0054 00       		.byte	0
 1942 0055 07       		.uleb128 0x7
 1943 0056 2E       		.uleb128 0x2e
 1944 0057 01       		.byte	0x1
 1945 0058 3F       		.uleb128 0x3f
 1946 0059 19       		.uleb128 0x19
 1947 005a 03       		.uleb128 0x3
 1948 005b 0E       		.uleb128 0xe
 1949 005c 3A       		.uleb128 0x3a
 1950 005d 0B       		.uleb128 0xb
 1951 005e 3B       		.uleb128 0x3b
 1952 005f 0B       		.uleb128 0xb
 1953 0060 27       		.uleb128 0x27
 1954 0061 19       		.uleb128 0x19
 1955 0062 11       		.uleb128 0x11
 1956 0063 01       		.uleb128 0x1
 1957 0064 12       		.uleb128 0x12
 1958 0065 06       		.uleb128 0x6
 1959 0066 40       		.uleb128 0x40
 1960 0067 18       		.uleb128 0x18
 1961 0068 9642     		.uleb128 0x2116
 1962 006a 19       		.uleb128 0x19
 1963 006b 01       		.uleb128 0x1
 1964 006c 13       		.uleb128 0x13
 1965 006d 00       		.byte	0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 51


 1966 006e 00       		.byte	0
 1967 006f 08       		.uleb128 0x8
 1968 0070 34       		.uleb128 0x34
 1969 0071 00       		.byte	0
 1970 0072 03       		.uleb128 0x3
 1971 0073 0E       		.uleb128 0xe
 1972 0074 3A       		.uleb128 0x3a
 1973 0075 0B       		.uleb128 0xb
 1974 0076 3B       		.uleb128 0x3b
 1975 0077 0B       		.uleb128 0xb
 1976 0078 49       		.uleb128 0x49
 1977 0079 13       		.uleb128 0x13
 1978 007a 02       		.uleb128 0x2
 1979 007b 18       		.uleb128 0x18
 1980 007c 00       		.byte	0
 1981 007d 00       		.byte	0
 1982 007e 09       		.uleb128 0x9
 1983 007f 2E       		.uleb128 0x2e
 1984 0080 00       		.byte	0
 1985 0081 3F       		.uleb128 0x3f
 1986 0082 19       		.uleb128 0x19
 1987 0083 03       		.uleb128 0x3
 1988 0084 0E       		.uleb128 0xe
 1989 0085 3A       		.uleb128 0x3a
 1990 0086 0B       		.uleb128 0xb
 1991 0087 3B       		.uleb128 0x3b
 1992 0088 05       		.uleb128 0x5
 1993 0089 27       		.uleb128 0x27
 1994 008a 19       		.uleb128 0x19
 1995 008b 11       		.uleb128 0x11
 1996 008c 01       		.uleb128 0x1
 1997 008d 12       		.uleb128 0x12
 1998 008e 06       		.uleb128 0x6
 1999 008f 40       		.uleb128 0x40
 2000 0090 18       		.uleb128 0x18
 2001 0091 9642     		.uleb128 0x2116
 2002 0093 19       		.uleb128 0x19
 2003 0094 00       		.byte	0
 2004 0095 00       		.byte	0
 2005 0096 0A       		.uleb128 0xa
 2006 0097 2E       		.uleb128 0x2e
 2007 0098 00       		.byte	0
 2008 0099 3F       		.uleb128 0x3f
 2009 009a 19       		.uleb128 0x19
 2010 009b 03       		.uleb128 0x3
 2011 009c 0E       		.uleb128 0xe
 2012 009d 3A       		.uleb128 0x3a
 2013 009e 0B       		.uleb128 0xb
 2014 009f 3B       		.uleb128 0x3b
 2015 00a0 05       		.uleb128 0x5
 2016 00a1 27       		.uleb128 0x27
 2017 00a2 19       		.uleb128 0x19
 2018 00a3 11       		.uleb128 0x11
 2019 00a4 01       		.uleb128 0x1
 2020 00a5 12       		.uleb128 0x12
 2021 00a6 06       		.uleb128 0x6
 2022 00a7 40       		.uleb128 0x40
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 52


 2023 00a8 18       		.uleb128 0x18
 2024 00a9 9742     		.uleb128 0x2117
 2025 00ab 19       		.uleb128 0x19
 2026 00ac 00       		.byte	0
 2027 00ad 00       		.byte	0
 2028 00ae 0B       		.uleb128 0xb
 2029 00af 2E       		.uleb128 0x2e
 2030 00b0 01       		.byte	0x1
 2031 00b1 3F       		.uleb128 0x3f
 2032 00b2 19       		.uleb128 0x19
 2033 00b3 03       		.uleb128 0x3
 2034 00b4 0E       		.uleb128 0xe
 2035 00b5 3A       		.uleb128 0x3a
 2036 00b6 0B       		.uleb128 0xb
 2037 00b7 3B       		.uleb128 0x3b
 2038 00b8 05       		.uleb128 0x5
 2039 00b9 27       		.uleb128 0x27
 2040 00ba 19       		.uleb128 0x19
 2041 00bb 49       		.uleb128 0x49
 2042 00bc 13       		.uleb128 0x13
 2043 00bd 11       		.uleb128 0x11
 2044 00be 01       		.uleb128 0x1
 2045 00bf 12       		.uleb128 0x12
 2046 00c0 06       		.uleb128 0x6
 2047 00c1 40       		.uleb128 0x40
 2048 00c2 18       		.uleb128 0x18
 2049 00c3 9742     		.uleb128 0x2117
 2050 00c5 19       		.uleb128 0x19
 2051 00c6 01       		.uleb128 0x1
 2052 00c7 13       		.uleb128 0x13
 2053 00c8 00       		.byte	0
 2054 00c9 00       		.byte	0
 2055 00ca 0C       		.uleb128 0xc
 2056 00cb 05       		.uleb128 0x5
 2057 00cc 00       		.byte	0
 2058 00cd 03       		.uleb128 0x3
 2059 00ce 0E       		.uleb128 0xe
 2060 00cf 3A       		.uleb128 0x3a
 2061 00d0 0B       		.uleb128 0xb
 2062 00d1 3B       		.uleb128 0x3b
 2063 00d2 05       		.uleb128 0x5
 2064 00d3 49       		.uleb128 0x49
 2065 00d4 13       		.uleb128 0x13
 2066 00d5 02       		.uleb128 0x2
 2067 00d6 18       		.uleb128 0x18
 2068 00d7 00       		.byte	0
 2069 00d8 00       		.byte	0
 2070 00d9 0D       		.uleb128 0xd
 2071 00da 34       		.uleb128 0x34
 2072 00db 00       		.byte	0
 2073 00dc 03       		.uleb128 0x3
 2074 00dd 0E       		.uleb128 0xe
 2075 00de 3A       		.uleb128 0x3a
 2076 00df 0B       		.uleb128 0xb
 2077 00e0 3B       		.uleb128 0x3b
 2078 00e1 05       		.uleb128 0x5
 2079 00e2 49       		.uleb128 0x49
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 53


 2080 00e3 13       		.uleb128 0x13
 2081 00e4 02       		.uleb128 0x2
 2082 00e5 18       		.uleb128 0x18
 2083 00e6 00       		.byte	0
 2084 00e7 00       		.byte	0
 2085 00e8 0E       		.uleb128 0xe
 2086 00e9 2E       		.uleb128 0x2e
 2087 00ea 01       		.byte	0x1
 2088 00eb 3F       		.uleb128 0x3f
 2089 00ec 19       		.uleb128 0x19
 2090 00ed 03       		.uleb128 0x3
 2091 00ee 0E       		.uleb128 0xe
 2092 00ef 3A       		.uleb128 0x3a
 2093 00f0 0B       		.uleb128 0xb
 2094 00f1 3B       		.uleb128 0x3b
 2095 00f2 05       		.uleb128 0x5
 2096 00f3 27       		.uleb128 0x27
 2097 00f4 19       		.uleb128 0x19
 2098 00f5 49       		.uleb128 0x49
 2099 00f6 13       		.uleb128 0x13
 2100 00f7 11       		.uleb128 0x11
 2101 00f8 01       		.uleb128 0x1
 2102 00f9 12       		.uleb128 0x12
 2103 00fa 06       		.uleb128 0x6
 2104 00fb 40       		.uleb128 0x40
 2105 00fc 18       		.uleb128 0x18
 2106 00fd 9642     		.uleb128 0x2116
 2107 00ff 19       		.uleb128 0x19
 2108 0100 01       		.uleb128 0x1
 2109 0101 13       		.uleb128 0x13
 2110 0102 00       		.byte	0
 2111 0103 00       		.byte	0
 2112 0104 0F       		.uleb128 0xf
 2113 0105 2E       		.uleb128 0x2e
 2114 0106 01       		.byte	0x1
 2115 0107 3F       		.uleb128 0x3f
 2116 0108 19       		.uleb128 0x19
 2117 0109 03       		.uleb128 0x3
 2118 010a 0E       		.uleb128 0xe
 2119 010b 3A       		.uleb128 0x3a
 2120 010c 0B       		.uleb128 0xb
 2121 010d 3B       		.uleb128 0x3b
 2122 010e 05       		.uleb128 0x5
 2123 010f 27       		.uleb128 0x27
 2124 0110 19       		.uleb128 0x19
 2125 0111 11       		.uleb128 0x11
 2126 0112 01       		.uleb128 0x1
 2127 0113 12       		.uleb128 0x12
 2128 0114 06       		.uleb128 0x6
 2129 0115 40       		.uleb128 0x40
 2130 0116 18       		.uleb128 0x18
 2131 0117 9742     		.uleb128 0x2117
 2132 0119 19       		.uleb128 0x19
 2133 011a 01       		.uleb128 0x1
 2134 011b 13       		.uleb128 0x13
 2135 011c 00       		.byte	0
 2136 011d 00       		.byte	0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 54


 2137 011e 10       		.uleb128 0x10
 2138 011f 2E       		.uleb128 0x2e
 2139 0120 01       		.byte	0x1
 2140 0121 3F       		.uleb128 0x3f
 2141 0122 19       		.uleb128 0x19
 2142 0123 03       		.uleb128 0x3
 2143 0124 0E       		.uleb128 0xe
 2144 0125 3A       		.uleb128 0x3a
 2145 0126 0B       		.uleb128 0xb
 2146 0127 3B       		.uleb128 0x3b
 2147 0128 05       		.uleb128 0x5
 2148 0129 27       		.uleb128 0x27
 2149 012a 19       		.uleb128 0x19
 2150 012b 11       		.uleb128 0x11
 2151 012c 01       		.uleb128 0x1
 2152 012d 12       		.uleb128 0x12
 2153 012e 06       		.uleb128 0x6
 2154 012f 40       		.uleb128 0x40
 2155 0130 18       		.uleb128 0x18
 2156 0131 9642     		.uleb128 0x2116
 2157 0133 19       		.uleb128 0x19
 2158 0134 01       		.uleb128 0x1
 2159 0135 13       		.uleb128 0x13
 2160 0136 00       		.byte	0
 2161 0137 00       		.byte	0
 2162 0138 11       		.uleb128 0x11
 2163 0139 01       		.uleb128 0x1
 2164 013a 01       		.byte	0x1
 2165 013b 49       		.uleb128 0x49
 2166 013c 13       		.uleb128 0x13
 2167 013d 01       		.uleb128 0x1
 2168 013e 13       		.uleb128 0x13
 2169 013f 00       		.byte	0
 2170 0140 00       		.byte	0
 2171 0141 12       		.uleb128 0x12
 2172 0142 21       		.uleb128 0x21
 2173 0143 00       		.byte	0
 2174 0144 49       		.uleb128 0x49
 2175 0145 13       		.uleb128 0x13
 2176 0146 2F       		.uleb128 0x2f
 2177 0147 0B       		.uleb128 0xb
 2178 0148 00       		.byte	0
 2179 0149 00       		.byte	0
 2180 014a 13       		.uleb128 0x13
 2181 014b 26       		.uleb128 0x26
 2182 014c 00       		.byte	0
 2183 014d 49       		.uleb128 0x49
 2184 014e 13       		.uleb128 0x13
 2185 014f 00       		.byte	0
 2186 0150 00       		.byte	0
 2187 0151 14       		.uleb128 0x14
 2188 0152 34       		.uleb128 0x34
 2189 0153 00       		.byte	0
 2190 0154 03       		.uleb128 0x3
 2191 0155 0E       		.uleb128 0xe
 2192 0156 3A       		.uleb128 0x3a
 2193 0157 0B       		.uleb128 0xb
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 55


 2194 0158 3B       		.uleb128 0x3b
 2195 0159 0B       		.uleb128 0xb
 2196 015a 49       		.uleb128 0x49
 2197 015b 13       		.uleb128 0x13
 2198 015c 3F       		.uleb128 0x3f
 2199 015d 19       		.uleb128 0x19
 2200 015e 02       		.uleb128 0x2
 2201 015f 18       		.uleb128 0x18
 2202 0160 00       		.byte	0
 2203 0161 00       		.byte	0
 2204 0162 00       		.byte	0
 2205              		.section	.debug_aranges,"",%progbits
 2206 0000 A4000000 		.4byte	0xa4
 2207 0004 0200     		.2byte	0x2
 2208 0006 00000000 		.4byte	.Ldebug_info0
 2209 000a 04       		.byte	0x4
 2210 000b 00       		.byte	0
 2211 000c 0000     		.2byte	0
 2212 000e 0000     		.2byte	0
 2213 0010 00000000 		.4byte	.LFB2
 2214 0014 24000000 		.4byte	.LFE2-.LFB2
 2215 0018 00000000 		.4byte	.LFB3
 2216 001c E4010000 		.4byte	.LFE3-.LFB3
 2217 0020 00000000 		.4byte	.LFB4
 2218 0024 38000000 		.4byte	.LFE4-.LFB4
 2219 0028 00000000 		.4byte	.LFB5
 2220 002c 1C000000 		.4byte	.LFE5-.LFB5
 2221 0030 00000000 		.4byte	.LFB6
 2222 0034 1C000000 		.4byte	.LFE6-.LFB6
 2223 0038 00000000 		.4byte	.LFB7
 2224 003c 20000000 		.4byte	.LFE7-.LFB7
 2225 0040 00000000 		.4byte	.LFB8
 2226 0044 48000000 		.4byte	.LFE8-.LFB8
 2227 0048 00000000 		.4byte	.LFB9
 2228 004c 44000000 		.4byte	.LFE9-.LFB9
 2229 0050 00000000 		.4byte	.LFB10
 2230 0054 20000000 		.4byte	.LFE10-.LFB10
 2231 0058 00000000 		.4byte	.LFB11
 2232 005c 30000000 		.4byte	.LFE11-.LFB11
 2233 0060 00000000 		.4byte	.LFB12
 2234 0064 30000000 		.4byte	.LFE12-.LFB12
 2235 0068 00000000 		.4byte	.LFB13
 2236 006c 20000000 		.4byte	.LFE13-.LFB13
 2237 0070 00000000 		.4byte	.LFB14
 2238 0074 20000000 		.4byte	.LFE14-.LFB14
 2239 0078 00000000 		.4byte	.LFB15
 2240 007c 34000000 		.4byte	.LFE15-.LFB15
 2241 0080 00000000 		.4byte	.LFB16
 2242 0084 2C000000 		.4byte	.LFE16-.LFB16
 2243 0088 00000000 		.4byte	.LFB17
 2244 008c A0000000 		.4byte	.LFE17-.LFB17
 2245 0090 00000000 		.4byte	.LFB18
 2246 0094 90000000 		.4byte	.LFE18-.LFB18
 2247 0098 00000000 		.4byte	.LFB19
 2248 009c 80000000 		.4byte	.LFE19-.LFB19
 2249 00a0 00000000 		.4byte	0
 2250 00a4 00000000 		.4byte	0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 56


 2251              		.section	.debug_ranges,"",%progbits
 2252              	.Ldebug_ranges0:
 2253 0000 00000000 		.4byte	.LFB2
 2254 0004 24000000 		.4byte	.LFE2
 2255 0008 00000000 		.4byte	.LFB3
 2256 000c E4010000 		.4byte	.LFE3
 2257 0010 00000000 		.4byte	.LFB4
 2258 0014 38000000 		.4byte	.LFE4
 2259 0018 00000000 		.4byte	.LFB5
 2260 001c 1C000000 		.4byte	.LFE5
 2261 0020 00000000 		.4byte	.LFB6
 2262 0024 1C000000 		.4byte	.LFE6
 2263 0028 00000000 		.4byte	.LFB7
 2264 002c 20000000 		.4byte	.LFE7
 2265 0030 00000000 		.4byte	.LFB8
 2266 0034 48000000 		.4byte	.LFE8
 2267 0038 00000000 		.4byte	.LFB9
 2268 003c 44000000 		.4byte	.LFE9
 2269 0040 00000000 		.4byte	.LFB10
 2270 0044 20000000 		.4byte	.LFE10
 2271 0048 00000000 		.4byte	.LFB11
 2272 004c 30000000 		.4byte	.LFE11
 2273 0050 00000000 		.4byte	.LFB12
 2274 0054 30000000 		.4byte	.LFE12
 2275 0058 00000000 		.4byte	.LFB13
 2276 005c 20000000 		.4byte	.LFE13
 2277 0060 00000000 		.4byte	.LFB14
 2278 0064 20000000 		.4byte	.LFE14
 2279 0068 00000000 		.4byte	.LFB15
 2280 006c 34000000 		.4byte	.LFE15
 2281 0070 00000000 		.4byte	.LFB16
 2282 0074 2C000000 		.4byte	.LFE16
 2283 0078 00000000 		.4byte	.LFB17
 2284 007c A0000000 		.4byte	.LFE17
 2285 0080 00000000 		.4byte	.LFB18
 2286 0084 90000000 		.4byte	.LFE18
 2287 0088 00000000 		.4byte	.LFB19
 2288 008c 80000000 		.4byte	.LFE19
 2289 0090 00000000 		.4byte	0
 2290 0094 00000000 		.4byte	0
 2291              		.section	.debug_line,"",%progbits
 2292              	.Ldebug_line0:
 2293 0000 A0020000 		.section	.debug_str,"MS",%progbits,1
 2293      02004A00 
 2293      00000201 
 2293      FB0E0D00 
 2293      01010101 
 2294              	.LASF58:
 2295 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2295      5341525F 
 2295      5365715F 
 2295      315F6F66 
 2295      66736574 
 2296              	.LASF10:
 2297 0015 75696E74 		.ascii	"uint16\000"
 2297      313600
 2298              	.LASF36:
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 57


 2299 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2299      5341525F 
 2299      5365715F 
 2299      315F496E 
 2299      697400
 2300              	.LASF48:
 2301 002f 61646347 		.ascii	"adcGain\000"
 2301      61696E00 
 2302              	.LASF24:
 2303 0037 636F756E 		.ascii	"counts\000"
 2303      747300
 2304              	.LASF62:
 2305 003e 433A5C55 		.ascii	"C:\\Users\\puria\\Documents\\GitHub\\able\\psoc\\mu"
 2305      73657273 
 2305      5C707572 
 2305      69615C44 
 2305      6F63756D 
 2306 006a 6C746963 		.ascii	"lticon_ble.cydsn\000"
 2306      6F6E5F62 
 2306      6C652E63 
 2306      7964736E 
 2306      00
 2307              	.LASF28:
 2308 007b 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2308      5341525F 
 2308      5365715F 
 2308      315F5374 
 2308      61727443 
 2309              	.LASF44:
 2310 0096 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2310      5341525F 
 2310      5365715F 
 2310      315F5365 
 2310      74536174 
 2311              	.LASF25:
 2312 00af 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2312      5341525F 
 2312      5365715F 
 2312      315F5374 
 2312      61727400 
 2313              	.LASF7:
 2314 00c3 6C6F6E67 		.ascii	"long long unsigned int\000"
 2314      206C6F6E 
 2314      6720756E 
 2314      7369676E 
 2314      65642069 
 2315              	.LASF26:
 2316 00da 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2316      5341525F 
 2316      5365715F 
 2316      315F456E 
 2316      61626C65 
 2317              	.LASF32:
 2318 00ef 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2318      5341525F 
 2318      5365715F 
 2318      315F4765 
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 58


 2318      74526573 
 2319              	.LASF6:
 2320 0109 6C6F6E67 		.ascii	"long long int\000"
 2320      206C6F6E 
 2320      6720696E 
 2320      7400
 2321              	.LASF0:
 2322 0117 7369676E 		.ascii	"signed char\000"
 2322      65642063 
 2322      68617200 
 2323              	.LASF41:
 2324 0123 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2324      5341525F 
 2324      5365715F 
 2324      315F5365 
 2324      74486967 
 2325              	.LASF13:
 2326 013e 696E7433 		.ascii	"int32\000"
 2326      3200
 2327              	.LASF52:
 2328 0144 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2328      5341525F 
 2328      5365715F 
 2328      315F436F 
 2328      756E7473 
 2329              	.LASF4:
 2330 0162 6C6F6E67 		.ascii	"long int\000"
 2330      20696E74 
 2330      00
 2331              	.LASF9:
 2332 016b 75696E74 		.ascii	"uint8\000"
 2332      3800
 2333              	.LASF16:
 2334 0171 646F7562 		.ascii	"double\000"
 2334      6C6500
 2335              	.LASF11:
 2336 0178 75696E74 		.ascii	"uint32\000"
 2336      333200
 2337              	.LASF38:
 2338 017f 6D61736B 		.ascii	"mask\000"
 2338      00
 2339              	.LASF49:
 2340 0184 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2340      5341525F 
 2340      5365715F 
 2340      315F436F 
 2340      756E7473 
 2341              	.LASF33:
 2342 01a2 7265744D 		.ascii	"retMode\000"
 2342      6F646500 
 2343              	.LASF57:
 2344 01aa 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2344      5341525F 
 2344      5365715F 
 2344      315F696E 
 2344      69745661 
 2345              	.LASF8:
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 59


 2346 01c0 756E7369 		.ascii	"unsigned int\000"
 2346      676E6564 
 2346      20696E74 
 2346      00
 2347              	.LASF53:
 2348 01cd 75566F6C 		.ascii	"uVolts\000"
 2348      747300
 2349              	.LASF5:
 2350 01d4 6C6F6E67 		.ascii	"long unsigned int\000"
 2350      20756E73 
 2350      69676E65 
 2350      6420696E 
 2350      7400
 2351              	.LASF55:
 2352 01e6 766F6C74 		.ascii	"volts\000"
 2352      7300
 2353              	.LASF23:
 2354 01ec 746D7052 		.ascii	"tmpRegVal\000"
 2354      65675661 
 2354      6C00
 2355              	.LASF3:
 2356 01f6 73686F72 		.ascii	"short unsigned int\000"
 2356      7420756E 
 2356      7369676E 
 2356      65642069 
 2356      6E7400
 2357              	.LASF56:
 2358 0209 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2358      5341525F 
 2358      5365715F 
 2358      315F6368 
 2358      616E6E65 
 2359              	.LASF60:
 2360 0226 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2360      43313120 
 2360      352E342E 
 2360      31203230 
 2360      31363036 
 2361 0259 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2361      20726576 
 2361      6973696F 
 2361      6E203233 
 2361      37373135 
 2362 028c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2362      66756E63 
 2362      74696F6E 
 2362      2D736563 
 2362      74696F6E 
 2363              	.LASF51:
 2364 02b4 6D566F6C 		.ascii	"mVolts\000"
 2364      747300
 2365              	.LASF19:
 2366 02bb 72656733 		.ascii	"reg32\000"
 2366      3200
 2367              	.LASF14:
 2368 02c1 666C6F61 		.ascii	"float32\000"
 2368      74333200 
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 60


 2369              	.LASF21:
 2370 02c9 73697A65 		.ascii	"sizetype\000"
 2370      74797065 
 2370      00
 2371              	.LASF40:
 2372 02d2 6C6F774C 		.ascii	"lowLimit\000"
 2372      696D6974 
 2372      00
 2373              	.LASF20:
 2374 02db 6C6F6E67 		.ascii	"long double\000"
 2374      20646F75 
 2374      626C6500 
 2375              	.LASF31:
 2376 02e7 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2376      5341525F 
 2376      5365715F 
 2376      315F4973 
 2376      456E6443 
 2377              	.LASF29:
 2378 0305 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2378      5341525F 
 2378      5365715F 
 2378      315F5374 
 2378      6F70436F 
 2379              	.LASF17:
 2380 031f 696E7436 		.ascii	"int64\000"
 2380      3400
 2381              	.LASF61:
 2382 0325 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2382      72617465 
 2382      645F536F 
 2382      75726365 
 2382      5C50536F 
 2383              	.LASF15:
 2384 034c 666C6F61 		.ascii	"float\000"
 2384      7400
 2385              	.LASF47:
 2386 0352 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2386      5341525F 
 2386      5365715F 
 2386      315F5365 
 2386      74476169 
 2387              	.LASF27:
 2388 0368 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2388      5341525F 
 2388      5365715F 
 2388      315F5374 
 2388      6F7000
 2389              	.LASF42:
 2390 037b 68696768 		.ascii	"highLimit\000"
 2390      4C696D69 
 2390      7400
 2391              	.LASF1:
 2392 0385 756E7369 		.ascii	"unsigned char\000"
 2392      676E6564 
 2392      20636861 
 2392      7200
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 61


 2393              	.LASF2:
 2394 0393 73686F72 		.ascii	"short int\000"
 2394      7420696E 
 2394      7400
 2395              	.LASF54:
 2396 039d 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2396      5341525F 
 2396      5365715F 
 2396      315F436F 
 2396      756E7473 
 2397              	.LASF37:
 2398 03ba 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2398      5341525F 
 2398      5365715F 
 2398      315F5365 
 2398      74436861 
 2399              	.LASF22:
 2400 03d4 63684E75 		.ascii	"chNum\000"
 2400      6D00
 2401              	.LASF34:
 2402 03da 6368616E 		.ascii	"chan\000"
 2402      00
 2403              	.LASF18:
 2404 03df 63686172 		.ascii	"char\000"
 2404      00
 2405              	.LASF39:
 2406 03e4 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2406      5341525F 
 2406      5365715F 
 2406      315F5365 
 2406      744C6F77 
 2407              	.LASF46:
 2408 03fe 6F666673 		.ascii	"offset\000"
 2408      657400
 2409              	.LASF50:
 2410 0405 61646343 		.ascii	"adcCounts\000"
 2410      6F756E74 
 2410      7300
 2411              	.LASF59:
 2412 040f 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2412      5341525F 
 2412      5365715F 
 2412      315F636F 
 2412      756E7473 
 2413              	.LASF30:
 2414 042d 73746174 		.ascii	"status\000"
 2414      757300
 2415              	.LASF45:
 2416 0434 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2416      5341525F 
 2416      5365715F 
 2416      315F5365 
 2416      744F6666 
 2417              	.LASF12:
 2418 044c 696E7431 		.ascii	"int16\000"
 2418      3600
 2419              	.LASF43:
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccGrAyUr.s 			page 62


 2420 0452 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2420      5341525F 
 2420      5365715F 
 2420      315F5365 
 2420      744C696D 
 2421              	.LASF35:
 2422 046d 72657375 		.ascii	"result\000"
 2422      6C7400
 2423              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
