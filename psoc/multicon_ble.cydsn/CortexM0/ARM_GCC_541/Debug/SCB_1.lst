ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SCB_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SCB_1_initVar
  20              		.bss
  21              		.type	SCB_1_initVar, %object
  22              		.size	SCB_1_initVar, 1
  23              	SCB_1_initVar:
  24 0000 00       		.space	1
  25              		.global	SCB_1_IntrTxMask
  26 0001 00       		.align	1
  27              		.type	SCB_1_IntrTxMask, %object
  28              		.size	SCB_1_IntrTxMask, 2
  29              	SCB_1_IntrTxMask:
  30 0002 0000     		.space	2
  31              		.section	.text.SCB_1_Init,"ax",%progbits
  32              		.align	2
  33              		.global	SCB_1_Init
  34              		.code	16
  35              		.thumb_func
  36              		.type	SCB_1_Init, %function
  37              	SCB_1_Init:
  38              	.LFB2:
  39              		.file 1 "Generated_Source\\PSoC4\\SCB_1.c"
   1:Generated_Source\PSoC4/SCB_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/SCB_1.c **** * \file SCB_1.c
   3:Generated_Source\PSoC4/SCB_1.c **** * \version 3.20
   4:Generated_Source\PSoC4/SCB_1.c **** *
   5:Generated_Source\PSoC4/SCB_1.c **** * \brief
   6:Generated_Source\PSoC4/SCB_1.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/SCB_1.c **** *
   8:Generated_Source\PSoC4/SCB_1.c **** * Note:
   9:Generated_Source\PSoC4/SCB_1.c **** *
  10:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************
  11:Generated_Source\PSoC4/SCB_1.c **** * \copyright
  12:Generated_Source\PSoC4/SCB_1.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SCB_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SCB_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SCB_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SCB_1.c **** 
  18:Generated_Source\PSoC4/SCB_1.c **** #include "SCB_1_PVT.h"
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 2


  19:Generated_Source\PSoC4/SCB_1.c **** 
  20:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_MODE_I2C_INC)
  21:Generated_Source\PSoC4/SCB_1.c ****     #include "SCB_1_I2C_PVT.h"
  22:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/SCB_1.c **** 
  24:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/SCB_1.c ****     #include "SCB_1_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/SCB_1.c **** 
  28:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_MODE_SPI_INC || SCB_1_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/SCB_1.c ****     #include "SCB_1_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_MODE_SPI_INC || SCB_1_SCB_MODE_UART_INC) */
  31:Generated_Source\PSoC4/SCB_1.c **** 
  32:Generated_Source\PSoC4/SCB_1.c **** 
  33:Generated_Source\PSoC4/SCB_1.c **** /***************************************
  34:Generated_Source\PSoC4/SCB_1.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/SCB_1.c **** ***************************************/
  36:Generated_Source\PSoC4/SCB_1.c **** 
  37:Generated_Source\PSoC4/SCB_1.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/SCB_1.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/SCB_1.c ****     uint8 SCB_1_scbMode = SCB_1_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/SCB_1.c ****     uint8 SCB_1_scbEnableWake;
  42:Generated_Source\PSoC4/SCB_1.c ****     uint8 SCB_1_scbEnableIntr;
  43:Generated_Source\PSoC4/SCB_1.c **** 
  44:Generated_Source\PSoC4/SCB_1.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/SCB_1.c ****     uint8 SCB_1_mode;
  46:Generated_Source\PSoC4/SCB_1.c ****     uint8 SCB_1_acceptAddr;
  47:Generated_Source\PSoC4/SCB_1.c **** 
  48:Generated_Source\PSoC4/SCB_1.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/SCB_1.c ****     volatile uint8 * SCB_1_rxBuffer;
  50:Generated_Source\PSoC4/SCB_1.c ****     uint8  SCB_1_rxDataBits;
  51:Generated_Source\PSoC4/SCB_1.c ****     uint32 SCB_1_rxBufferSize;
  52:Generated_Source\PSoC4/SCB_1.c **** 
  53:Generated_Source\PSoC4/SCB_1.c ****     volatile uint8 * SCB_1_txBuffer;
  54:Generated_Source\PSoC4/SCB_1.c ****     uint8  SCB_1_txDataBits;
  55:Generated_Source\PSoC4/SCB_1.c ****     uint32 SCB_1_txBufferSize;
  56:Generated_Source\PSoC4/SCB_1.c **** 
  57:Generated_Source\PSoC4/SCB_1.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/SCB_1.c ****     uint8 SCB_1_numberOfAddr;
  59:Generated_Source\PSoC4/SCB_1.c ****     uint8 SCB_1_subAddrSize;
  60:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/SCB_1.c **** 
  62:Generated_Source\PSoC4/SCB_1.c **** 
  63:Generated_Source\PSoC4/SCB_1.c **** /***************************************
  64:Generated_Source\PSoC4/SCB_1.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/SCB_1.c **** ***************************************/
  66:Generated_Source\PSoC4/SCB_1.c **** /**
  67:Generated_Source\PSoC4/SCB_1.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/SCB_1.c **** * \{
  69:Generated_Source\PSoC4/SCB_1.c **** */
  70:Generated_Source\PSoC4/SCB_1.c **** 
  71:Generated_Source\PSoC4/SCB_1.c **** /** SCB_1_initVar indicates whether the SCB_1 
  72:Generated_Source\PSoC4/SCB_1.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/SCB_1.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/SCB_1.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/SCB_1.c **** *  call to the SCB_1_Start() routine.
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 3


  76:Generated_Source\PSoC4/SCB_1.c **** *
  77:Generated_Source\PSoC4/SCB_1.c **** *  If re-initialization of the component is required, then the 
  78:Generated_Source\PSoC4/SCB_1.c **** *  SCB_1_Init() function can be called before the 
  79:Generated_Source\PSoC4/SCB_1.c **** *  SCB_1_Start() or SCB_1_Enable() function.
  80:Generated_Source\PSoC4/SCB_1.c **** */
  81:Generated_Source\PSoC4/SCB_1.c **** uint8 SCB_1_initVar = 0u;
  82:Generated_Source\PSoC4/SCB_1.c **** 
  83:Generated_Source\PSoC4/SCB_1.c **** 
  84:Generated_Source\PSoC4/SCB_1.c **** #if (! (SCB_1_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/SCB_1.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/SCB_1.c ****     * SCB_1_Stop() is called. Only these TX interrupt sources 
  88:Generated_Source\PSoC4/SCB_1.c ****     * will be restored on a subsequent SCB_1_Enable() call.
  89:Generated_Source\PSoC4/SCB_1.c ****     */
  90:Generated_Source\PSoC4/SCB_1.c ****     uint16 SCB_1_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/SCB_1.c **** #endif /* (! (SCB_1_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/SCB_1.c ****               SCB_1_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/SCB_1.c **** /** \} globals */
  94:Generated_Source\PSoC4/SCB_1.c **** 
  95:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/SCB_1.c **** #if !defined (CY_REMOVE_SCB_1_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/SCB_1.c ****     void (*SCB_1_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/SCB_1.c **** #endif /* !defined (CY_REMOVE_SCB_1_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/SCB_1.c **** 
 101:Generated_Source\PSoC4/SCB_1.c **** 
 102:Generated_Source\PSoC4/SCB_1.c **** /***************************************
 103:Generated_Source\PSoC4/SCB_1.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/SCB_1.c **** ***************************************/
 105:Generated_Source\PSoC4/SCB_1.c **** 
 106:Generated_Source\PSoC4/SCB_1.c **** static void SCB_1_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/SCB_1.c **** static void SCB_1_ScbModeStop(void);
 108:Generated_Source\PSoC4/SCB_1.c **** static void SCB_1_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/SCB_1.c **** 
 110:Generated_Source\PSoC4/SCB_1.c **** 
 111:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_Init
 113:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/SCB_1.c **** *
 115:Generated_Source\PSoC4/SCB_1.c **** *  Initializes the SCB_1 component to operate in one of the selected
 116:Generated_Source\PSoC4/SCB_1.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/SCB_1.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/SCB_1.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/SCB_1.c **** *  SCB_1_I2CInit, SCB_1_SpiInit, 
 120:Generated_Source\PSoC4/SCB_1.c **** *  SCB_1_UartInit or SCB_1_EzI2CInit.
 121:Generated_Source\PSoC4/SCB_1.c **** *
 122:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/SCB_1.c **** void SCB_1_Init(void)
 124:Generated_Source\PSoC4/SCB_1.c **** {
  40              		.loc 1 124 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 4


  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
 125:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/SCB_1.c ****     if (SCB_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 127:Generated_Source\PSoC4/SCB_1.c ****     {
 128:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_initVar = 0u;
 129:Generated_Source\PSoC4/SCB_1.c ****     }
 130:Generated_Source\PSoC4/SCB_1.c ****     else
 131:Generated_Source\PSoC4/SCB_1.c ****     {
 132:Generated_Source\PSoC4/SCB_1.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/SCB_1.c ****     }
 134:Generated_Source\PSoC4/SCB_1.c **** 
 135:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_I2CInit();
 137:Generated_Source\PSoC4/SCB_1.c **** 
 138:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_SpiInit();
 140:Generated_Source\PSoC4/SCB_1.c **** 
 141:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_UartInit();
  50              		.loc 1 142 0
  51 0004 FFF7FEFF 		bl	SCB_1_UartInit
 143:Generated_Source\PSoC4/SCB_1.c **** 
 144:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_EzI2CInit();
 146:Generated_Source\PSoC4/SCB_1.c **** 
 147:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/SCB_1.c **** }
  52              		.loc 1 148 0
  53 0008 C046     		nop
  54 000a BD46     		mov	sp, r7
  55              		@ sp needed
  56 000c 80BD     		pop	{r7, pc}
  57              		.cfi_endproc
  58              	.LFE2:
  59              		.size	SCB_1_Init, .-SCB_1_Init
  60 000e C046     		.section	.text.SCB_1_Enable,"ax",%progbits
  61              		.align	2
  62              		.global	SCB_1_Enable
  63              		.code	16
  64              		.thumb_func
  65              		.type	SCB_1_Enable, %function
  66              	SCB_1_Enable:
  67              	.LFB3:
 149:Generated_Source\PSoC4/SCB_1.c **** 
 150:Generated_Source\PSoC4/SCB_1.c **** 
 151:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_Enable
 153:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/SCB_1.c **** *
 155:Generated_Source\PSoC4/SCB_1.c **** *  Enables SCB_1 component operation: activates the hardware and 
 156:Generated_Source\PSoC4/SCB_1.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/SCB_1.c **** *  SCB_1_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/SCB_1.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/SCB_1.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/SCB_1.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/SCB_1.c **** *  internal or external.
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 5


 162:Generated_Source\PSoC4/SCB_1.c **** *  The SCB_1 configuration should be not changed when the component
 163:Generated_Source\PSoC4/SCB_1.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/SCB_1.c **** *  component.
 165:Generated_Source\PSoC4/SCB_1.c **** *  When configuration is set to “Unconfigured SCB_1”, the component 
 166:Generated_Source\PSoC4/SCB_1.c **** *  must first be initialized to operate in one of the following configurations: 
 167:Generated_Source\PSoC4/SCB_1.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/SCB_1.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/SCB_1.c **** *
 170:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/SCB_1.c **** void SCB_1_Enable(void)
 172:Generated_Source\PSoC4/SCB_1.c **** {
  68              		.loc 1 172 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 80B5     		push	{r7, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
 173:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/SCB_1.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/SCB_1.c ****     if (!SCB_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/SCB_1.c ****     {
 177:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_CTRL_REG |= SCB_1_CTRL_ENABLED;
 178:Generated_Source\PSoC4/SCB_1.c **** 
 179:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_ScbEnableIntr();
 180:Generated_Source\PSoC4/SCB_1.c **** 
 181:Generated_Source\PSoC4/SCB_1.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_ScbModePostEnable();
 183:Generated_Source\PSoC4/SCB_1.c ****     }
 184:Generated_Source\PSoC4/SCB_1.c **** #else
 185:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_CTRL_REG |= SCB_1_CTRL_ENABLED;
  78              		.loc 1 185 0
  79 0004 064B     		ldr	r3, .L3
  80 0006 064A     		ldr	r2, .L3
  81 0008 1268     		ldr	r2, [r2]
  82 000a 8021     		movs	r1, #128
  83 000c 0906     		lsls	r1, r1, #24
  84 000e 0A43     		orrs	r2, r1
  85 0010 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/SCB_1.c **** 
 187:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_ScbEnableIntr();
  86              		.loc 1 187 0
  87 0012 FFF7FEFF 		bl	SCB_1_ScbEnableIntr
 188:Generated_Source\PSoC4/SCB_1.c **** 
 189:Generated_Source\PSoC4/SCB_1.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_ScbModePostEnable();
  88              		.loc 1 190 0
  89 0016 FFF7FEFF 		bl	SCB_1_ScbModePostEnable
 191:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/SCB_1.c **** }
  90              		.loc 1 192 0
  91 001a C046     		nop
  92 001c BD46     		mov	sp, r7
  93              		@ sp needed
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 6


  94 001e 80BD     		pop	{r7, pc}
  95              	.L4:
  96              		.align	2
  97              	.L3:
  98 0020 00002540 		.word	1076166656
  99              		.cfi_endproc
 100              	.LFE3:
 101              		.size	SCB_1_Enable, .-SCB_1_Enable
 102              		.section	.text.SCB_1_Start,"ax",%progbits
 103              		.align	2
 104              		.global	SCB_1_Start
 105              		.code	16
 106              		.thumb_func
 107              		.type	SCB_1_Start, %function
 108              	SCB_1_Start:
 109              	.LFB4:
 193:Generated_Source\PSoC4/SCB_1.c **** 
 194:Generated_Source\PSoC4/SCB_1.c **** 
 195:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_Start
 197:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/SCB_1.c **** *
 199:Generated_Source\PSoC4/SCB_1.c **** *  Invokes SCB_1_Init() and SCB_1_Enable().
 200:Generated_Source\PSoC4/SCB_1.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/SCB_1.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/SCB_1.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 203:Generated_Source\PSoC4/SCB_1.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/SCB_1.c **** *
 205:Generated_Source\PSoC4/SCB_1.c **** * \globalvars
 206:Generated_Source\PSoC4/SCB_1.c **** *  SCB_1_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/SCB_1.c **** *  on first function call.
 208:Generated_Source\PSoC4/SCB_1.c **** *
 209:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/SCB_1.c **** void SCB_1_Start(void)
 211:Generated_Source\PSoC4/SCB_1.c **** {
 110              		.loc 1 211 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 212:Generated_Source\PSoC4/SCB_1.c ****     if (0u == SCB_1_initVar)
 120              		.loc 1 212 0
 121 0004 064B     		ldr	r3, .L7
 122 0006 1B78     		ldrb	r3, [r3]
 123 0008 002B     		cmp	r3, #0
 124 000a 04D1     		bne	.L6
 213:Generated_Source\PSoC4/SCB_1.c ****     {
 214:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_Init();
 125              		.loc 1 214 0
 126 000c FFF7FEFF 		bl	SCB_1_Init
 215:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_initVar = 1u; /* Component was initialized */
 127              		.loc 1 215 0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 7


 128 0010 034B     		ldr	r3, .L7
 129 0012 0122     		movs	r2, #1
 130 0014 1A70     		strb	r2, [r3]
 131              	.L6:
 216:Generated_Source\PSoC4/SCB_1.c ****     }
 217:Generated_Source\PSoC4/SCB_1.c **** 
 218:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_Enable();
 132              		.loc 1 218 0
 133 0016 FFF7FEFF 		bl	SCB_1_Enable
 219:Generated_Source\PSoC4/SCB_1.c **** }
 134              		.loc 1 219 0
 135 001a C046     		nop
 136 001c BD46     		mov	sp, r7
 137              		@ sp needed
 138 001e 80BD     		pop	{r7, pc}
 139              	.L8:
 140              		.align	2
 141              	.L7:
 142 0020 00000000 		.word	SCB_1_initVar
 143              		.cfi_endproc
 144              	.LFE4:
 145              		.size	SCB_1_Start, .-SCB_1_Start
 146              		.section	.text.SCB_1_Stop,"ax",%progbits
 147              		.align	2
 148              		.global	SCB_1_Stop
 149              		.code	16
 150              		.thumb_func
 151              		.type	SCB_1_Stop, %function
 152              	SCB_1_Stop:
 153              	.LFB5:
 220:Generated_Source\PSoC4/SCB_1.c **** 
 221:Generated_Source\PSoC4/SCB_1.c **** 
 222:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_Stop
 224:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/SCB_1.c **** *
 226:Generated_Source\PSoC4/SCB_1.c **** *  Disables the SCB_1 component: disable the hardware and internal 
 227:Generated_Source\PSoC4/SCB_1.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/SCB_1.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/SCB_1.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/SCB_1.c **** *  Refer to the function SCB_1_Enable() for the interrupt 
 231:Generated_Source\PSoC4/SCB_1.c **** *  configuration details.
 232:Generated_Source\PSoC4/SCB_1.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/SCB_1.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/SCB_1.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/SCB_1.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/SCB_1.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/SCB_1.c **** *
 238:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/SCB_1.c **** void SCB_1_Stop(void)
 240:Generated_Source\PSoC4/SCB_1.c **** {
 154              		.loc 1 240 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 8


 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 241:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_DisableInt();
 243:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/SCB_1.c **** 
 245:Generated_Source\PSoC4/SCB_1.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_ScbModeStop();
 164              		.loc 1 246 0
 165 0004 FFF7FEFF 		bl	SCB_1_ScbModeStop
 247:Generated_Source\PSoC4/SCB_1.c **** 
 248:Generated_Source\PSoC4/SCB_1.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_CTRL_REG &= (uint32) ~SCB_1_CTRL_ENABLED;
 166              		.loc 1 249 0
 167 0008 054B     		ldr	r3, .L10
 168 000a 054A     		ldr	r2, .L10
 169 000c 1268     		ldr	r2, [r2]
 170 000e 5200     		lsls	r2, r2, #1
 171 0010 5208     		lsrs	r2, r2, #1
 172 0012 1A60     		str	r2, [r3]
 250:Generated_Source\PSoC4/SCB_1.c **** 
 251:Generated_Source\PSoC4/SCB_1.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/SCB_1.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/SCB_1.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/SCB_1.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/SCB_1.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/SCB_1.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/SCB_1.c ****     * is disabled.
 258:Generated_Source\PSoC4/SCB_1.c ****     */
 259:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_SetTxInterruptMode(SCB_1_NO_INTR_SOURCES);
 173              		.loc 1 259 0
 174 0014 034B     		ldr	r3, .L10+4
 175 0016 0022     		movs	r2, #0
 176 0018 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/SCB_1.c **** 
 261:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_ClearPendingInt();
 263:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/SCB_1.c **** }
 177              		.loc 1 264 0
 178 001a C046     		nop
 179 001c BD46     		mov	sp, r7
 180              		@ sp needed
 181 001e 80BD     		pop	{r7, pc}
 182              	.L11:
 183              		.align	2
 184              	.L10:
 185 0020 00002540 		.word	1076166656
 186 0024 880F2540 		.word	1076170632
 187              		.cfi_endproc
 188              	.LFE5:
 189              		.size	SCB_1_Stop, .-SCB_1_Stop
 190              		.section	.text.SCB_1_SetRxFifoLevel,"ax",%progbits
 191              		.align	2
 192              		.global	SCB_1_SetRxFifoLevel
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 9


 193              		.code	16
 194              		.thumb_func
 195              		.type	SCB_1_SetRxFifoLevel, %function
 196              	SCB_1_SetRxFifoLevel:
 197              	.LFB6:
 265:Generated_Source\PSoC4/SCB_1.c **** 
 266:Generated_Source\PSoC4/SCB_1.c **** 
 267:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_SetRxFifoLevel
 269:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/SCB_1.c **** *
 271:Generated_Source\PSoC4/SCB_1.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/SCB_1.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/SCB_1.c **** *  interrupt request is generated.
 274:Generated_Source\PSoC4/SCB_1.c **** *
 275:Generated_Source\PSoC4/SCB_1.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/SCB_1.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/SCB_1.c **** *
 278:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/SCB_1.c **** void SCB_1_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/SCB_1.c **** {
 198              		.loc 1 280 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 16
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 80B5     		push	{r7, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 84B0     		sub	sp, sp, #16
 207              		.cfi_def_cfa_offset 24
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 210 0006 7860     		str	r0, [r7, #4]
 281:Generated_Source\PSoC4/SCB_1.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/SCB_1.c **** 
 283:Generated_Source\PSoC4/SCB_1.c ****     rxFifoCtrl = SCB_1_RX_FIFO_CTRL_REG;
 211              		.loc 1 283 0
 212 0008 094B     		ldr	r3, .L13
 213 000a 1B68     		ldr	r3, [r3]
 214 000c FB60     		str	r3, [r7, #12]
 284:Generated_Source\PSoC4/SCB_1.c **** 
 285:Generated_Source\PSoC4/SCB_1.c ****     rxFifoCtrl &= ((uint32) ~SCB_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 215              		.loc 1 285 0
 216 000e FB68     		ldr	r3, [r7, #12]
 217 0010 0F22     		movs	r2, #15
 218 0012 9343     		bics	r3, r2
 219 0014 FB60     		str	r3, [r7, #12]
 286:Generated_Source\PSoC4/SCB_1.c ****     rxFifoCtrl |= ((uint32) (SCB_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 220              		.loc 1 286 0
 221 0016 7B68     		ldr	r3, [r7, #4]
 222 0018 0F22     		movs	r2, #15
 223 001a 1340     		ands	r3, r2
 224 001c FA68     		ldr	r2, [r7, #12]
 225 001e 1343     		orrs	r3, r2
 226 0020 FB60     		str	r3, [r7, #12]
 287:Generated_Source\PSoC4/SCB_1.c **** 
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 10


 288:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_RX_FIFO_CTRL_REG = rxFifoCtrl;
 227              		.loc 1 288 0
 228 0022 034B     		ldr	r3, .L13
 229 0024 FA68     		ldr	r2, [r7, #12]
 230 0026 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/SCB_1.c **** }
 231              		.loc 1 289 0
 232 0028 C046     		nop
 233 002a BD46     		mov	sp, r7
 234 002c 04B0     		add	sp, sp, #16
 235              		@ sp needed
 236 002e 80BD     		pop	{r7, pc}
 237              	.L14:
 238              		.align	2
 239              	.L13:
 240 0030 04032540 		.word	1076167428
 241              		.cfi_endproc
 242              	.LFE6:
 243              		.size	SCB_1_SetRxFifoLevel, .-SCB_1_SetRxFifoLevel
 244              		.section	.text.SCB_1_SetTxFifoLevel,"ax",%progbits
 245              		.align	2
 246              		.global	SCB_1_SetTxFifoLevel
 247              		.code	16
 248              		.thumb_func
 249              		.type	SCB_1_SetTxFifoLevel, %function
 250              	SCB_1_SetTxFifoLevel:
 251              	.LFB7:
 290:Generated_Source\PSoC4/SCB_1.c **** 
 291:Generated_Source\PSoC4/SCB_1.c **** 
 292:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_SetTxFifoLevel
 294:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/SCB_1.c **** *
 296:Generated_Source\PSoC4/SCB_1.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/SCB_1.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/SCB_1.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/SCB_1.c **** *
 300:Generated_Source\PSoC4/SCB_1.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/SCB_1.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/SCB_1.c **** *
 303:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/SCB_1.c **** void SCB_1_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/SCB_1.c **** {
 252              		.loc 1 305 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 16
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256 0000 80B5     		push	{r7, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 7, -8
 259              		.cfi_offset 14, -4
 260 0002 84B0     		sub	sp, sp, #16
 261              		.cfi_def_cfa_offset 24
 262 0004 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 306:Generated_Source\PSoC4/SCB_1.c ****     uint32 txFifoCtrl;
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 11


 307:Generated_Source\PSoC4/SCB_1.c **** 
 308:Generated_Source\PSoC4/SCB_1.c ****     txFifoCtrl = SCB_1_TX_FIFO_CTRL_REG;
 265              		.loc 1 308 0
 266 0008 094B     		ldr	r3, .L16
 267 000a 1B68     		ldr	r3, [r3]
 268 000c FB60     		str	r3, [r7, #12]
 309:Generated_Source\PSoC4/SCB_1.c **** 
 310:Generated_Source\PSoC4/SCB_1.c ****     txFifoCtrl &= ((uint32) ~SCB_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 269              		.loc 1 310 0
 270 000e FB68     		ldr	r3, [r7, #12]
 271 0010 0F22     		movs	r2, #15
 272 0012 9343     		bics	r3, r2
 273 0014 FB60     		str	r3, [r7, #12]
 311:Generated_Source\PSoC4/SCB_1.c ****     txFifoCtrl |= ((uint32) (SCB_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 274              		.loc 1 311 0
 275 0016 7B68     		ldr	r3, [r7, #4]
 276 0018 0F22     		movs	r2, #15
 277 001a 1340     		ands	r3, r2
 278 001c FA68     		ldr	r2, [r7, #12]
 279 001e 1343     		orrs	r3, r2
 280 0020 FB60     		str	r3, [r7, #12]
 312:Generated_Source\PSoC4/SCB_1.c **** 
 313:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_TX_FIFO_CTRL_REG = txFifoCtrl;
 281              		.loc 1 313 0
 282 0022 034B     		ldr	r3, .L16
 283 0024 FA68     		ldr	r2, [r7, #12]
 284 0026 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/SCB_1.c **** }
 285              		.loc 1 314 0
 286 0028 C046     		nop
 287 002a BD46     		mov	sp, r7
 288 002c 04B0     		add	sp, sp, #16
 289              		@ sp needed
 290 002e 80BD     		pop	{r7, pc}
 291              	.L17:
 292              		.align	2
 293              	.L16:
 294 0030 04022540 		.word	1076167172
 295              		.cfi_endproc
 296              	.LFE7:
 297              		.size	SCB_1_SetTxFifoLevel, .-SCB_1_SetTxFifoLevel
 298              		.section	.text.SCB_1_ScbEnableIntr,"ax",%progbits
 299              		.align	2
 300              		.code	16
 301              		.thumb_func
 302              		.type	SCB_1_ScbEnableIntr, %function
 303              	SCB_1_ScbEnableIntr:
 304              	.LFB8:
 315:Generated_Source\PSoC4/SCB_1.c **** 
 316:Generated_Source\PSoC4/SCB_1.c **** 
 317:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/SCB_1.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/SCB_1.c ****     * Function Name: SCB_1_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/SCB_1.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/SCB_1.c ****     *
 322:Generated_Source\PSoC4/SCB_1.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/SCB_1.c ****     *  First the function that is registered is called, then the internal interrupt
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 12


 324:Generated_Source\PSoC4/SCB_1.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/SCB_1.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/SCB_1.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/SCB_1.c ****     *  is the function provided by the most recent call.
 328:Generated_Source\PSoC4/SCB_1.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/SCB_1.c ****     *
 330:Generated_Source\PSoC4/SCB_1.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/SCB_1.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/SCB_1.c ****     *        handler.
 333:Generated_Source\PSoC4/SCB_1.c ****     *
 334:Generated_Source\PSoC4/SCB_1.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/SCB_1.c ****     void SCB_1_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/SCB_1.c ****     {
 337:Generated_Source\PSoC4/SCB_1.c ****     #if !defined (CY_REMOVE_SCB_1_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_customIntrHandler = func; /* Register interrupt handler */
 339:Generated_Source\PSoC4/SCB_1.c ****     #else
 340:Generated_Source\PSoC4/SCB_1.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/SCB_1.c ****         {
 342:Generated_Source\PSoC4/SCB_1.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/SCB_1.c ****         }
 344:Generated_Source\PSoC4/SCB_1.c ****     #endif /* !defined (CY_REMOVE_SCB_1_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/SCB_1.c ****     }
 346:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/SCB_1.c **** 
 348:Generated_Source\PSoC4/SCB_1.c **** 
 349:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_ScbModeEnableIntr
 351:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/SCB_1.c **** *
 353:Generated_Source\PSoC4/SCB_1.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/SCB_1.c **** *
 355:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/SCB_1.c **** static void SCB_1_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/SCB_1.c **** {
 305              		.loc 1 357 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/SCB_1.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/SCB_1.c ****     #if (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/SCB_1.c ****         if (0u != SCB_1_scbEnableIntr)
 362:Generated_Source\PSoC4/SCB_1.c ****         {
 363:Generated_Source\PSoC4/SCB_1.c ****             SCB_1_EnableInt();
 364:Generated_Source\PSoC4/SCB_1.c ****         }
 365:Generated_Source\PSoC4/SCB_1.c **** 
 366:Generated_Source\PSoC4/SCB_1.c ****     #else
 367:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_EnableInt();
 368:Generated_Source\PSoC4/SCB_1.c **** 
 369:Generated_Source\PSoC4/SCB_1.c ****     #endif /* (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_IRQ_INTERNAL) */
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 13


 371:Generated_Source\PSoC4/SCB_1.c **** }
 315              		.loc 1 371 0
 316 0004 C046     		nop
 317 0006 BD46     		mov	sp, r7
 318              		@ sp needed
 319 0008 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE8:
 322              		.size	SCB_1_ScbEnableIntr, .-SCB_1_ScbEnableIntr
 323 000a C046     		.section	.text.SCB_1_ScbModePostEnable,"ax",%progbits
 324              		.align	2
 325              		.code	16
 326              		.thumb_func
 327              		.type	SCB_1_ScbModePostEnable, %function
 328              	SCB_1_ScbModePostEnable:
 329              	.LFB9:
 372:Generated_Source\PSoC4/SCB_1.c **** 
 373:Generated_Source\PSoC4/SCB_1.c **** 
 374:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_ScbModePostEnable
 376:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/SCB_1.c **** *
 378:Generated_Source\PSoC4/SCB_1.c **** *  Calls the PostEnable function for a specific operation mode.
 379:Generated_Source\PSoC4/SCB_1.c **** *
 380:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/SCB_1.c **** static void SCB_1_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/SCB_1.c **** {
 330              		.loc 1 382 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334 0000 80B5     		push	{r7, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 383:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG)
 384:Generated_Source\PSoC4/SCB_1.c **** #if (!SCB_1_CY_SCBIP_V1)
 385:Generated_Source\PSoC4/SCB_1.c ****     if (SCB_1_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/SCB_1.c ****     {
 387:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_SpiPostEnable();
 388:Generated_Source\PSoC4/SCB_1.c ****     }
 389:Generated_Source\PSoC4/SCB_1.c ****     else if (SCB_1_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/SCB_1.c ****     {
 391:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_UartPostEnable();
 392:Generated_Source\PSoC4/SCB_1.c ****     }
 393:Generated_Source\PSoC4/SCB_1.c ****     else
 394:Generated_Source\PSoC4/SCB_1.c ****     {
 395:Generated_Source\PSoC4/SCB_1.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/SCB_1.c ****     }
 397:Generated_Source\PSoC4/SCB_1.c **** #endif /* (!SCB_1_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/SCB_1.c **** 
 399:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_SpiPostEnable();
 401:Generated_Source\PSoC4/SCB_1.c **** 
 402:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_UART_CONST_CFG)
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 14


 403:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_UartPostEnable();
 340              		.loc 1 403 0
 341 0004 FFF7FEFF 		bl	SCB_1_UartPostEnable
 404:Generated_Source\PSoC4/SCB_1.c **** 
 405:Generated_Source\PSoC4/SCB_1.c **** #else
 406:Generated_Source\PSoC4/SCB_1.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/SCB_1.c **** }
 342              		.loc 1 408 0
 343 0008 C046     		nop
 344 000a BD46     		mov	sp, r7
 345              		@ sp needed
 346 000c 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE9:
 349              		.size	SCB_1_ScbModePostEnable, .-SCB_1_ScbModePostEnable
 350 000e C046     		.section	.text.SCB_1_ScbModeStop,"ax",%progbits
 351              		.align	2
 352              		.code	16
 353              		.thumb_func
 354              		.type	SCB_1_ScbModeStop, %function
 355              	SCB_1_ScbModeStop:
 356              	.LFB10:
 409:Generated_Source\PSoC4/SCB_1.c **** 
 410:Generated_Source\PSoC4/SCB_1.c **** 
 411:Generated_Source\PSoC4/SCB_1.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/SCB_1.c **** * Function Name: SCB_1_ScbModeStop
 413:Generated_Source\PSoC4/SCB_1.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/SCB_1.c **** *
 415:Generated_Source\PSoC4/SCB_1.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/SCB_1.c **** *
 417:Generated_Source\PSoC4/SCB_1.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/SCB_1.c **** static void SCB_1_ScbModeStop(void)
 419:Generated_Source\PSoC4/SCB_1.c **** {
 357              		.loc 1 419 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 80B5     		push	{r7, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 420:Generated_Source\PSoC4/SCB_1.c **** #if (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/SCB_1.c ****     if (SCB_1_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/SCB_1.c ****     {
 423:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_I2CStop();
 424:Generated_Source\PSoC4/SCB_1.c ****     }
 425:Generated_Source\PSoC4/SCB_1.c ****     else if (SCB_1_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/SCB_1.c ****     {
 427:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_EzI2CStop();
 428:Generated_Source\PSoC4/SCB_1.c ****     }
 429:Generated_Source\PSoC4/SCB_1.c **** #if (!SCB_1_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/SCB_1.c ****     else if (SCB_1_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/SCB_1.c ****     {
 432:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_SpiStop();
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 15


 433:Generated_Source\PSoC4/SCB_1.c ****     }
 434:Generated_Source\PSoC4/SCB_1.c ****     else if (SCB_1_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/SCB_1.c ****     {
 436:Generated_Source\PSoC4/SCB_1.c ****         SCB_1_UartStop();
 437:Generated_Source\PSoC4/SCB_1.c ****     }
 438:Generated_Source\PSoC4/SCB_1.c **** #endif /* (!SCB_1_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/SCB_1.c ****     else
 440:Generated_Source\PSoC4/SCB_1.c ****     {
 441:Generated_Source\PSoC4/SCB_1.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/SCB_1.c ****     }
 443:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_I2CStop();
 445:Generated_Source\PSoC4/SCB_1.c **** 
 446:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_EzI2CStop();
 448:Generated_Source\PSoC4/SCB_1.c **** 
 449:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_SpiStop();
 451:Generated_Source\PSoC4/SCB_1.c **** 
 452:Generated_Source\PSoC4/SCB_1.c **** #elif (SCB_1_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/SCB_1.c ****     SCB_1_UartStop();
 367              		.loc 1 453 0
 368 0004 FFF7FEFF 		bl	SCB_1_UartStop
 454:Generated_Source\PSoC4/SCB_1.c **** 
 455:Generated_Source\PSoC4/SCB_1.c **** #else
 456:Generated_Source\PSoC4/SCB_1.c ****     /* Unknown mode: do nothing */
 457:Generated_Source\PSoC4/SCB_1.c **** #endif /* (SCB_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 458:Generated_Source\PSoC4/SCB_1.c **** }
 369              		.loc 1 458 0
 370 0008 C046     		nop
 371 000a BD46     		mov	sp, r7
 372              		@ sp needed
 373 000c 80BD     		pop	{r7, pc}
 374              		.cfi_endproc
 375              	.LFE10:
 376              		.size	SCB_1_ScbModeStop, .-SCB_1_ScbModeStop
 377 000e C046     		.text
 378              	.Letext0:
 379              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 380              		.section	.debug_info,"",%progbits
 381              	.Ldebug_info0:
 382 0000 C6010000 		.4byte	0x1c6
 383 0004 0400     		.2byte	0x4
 384 0006 00000000 		.4byte	.Ldebug_abbrev0
 385 000a 04       		.byte	0x4
 386 000b 01       		.uleb128 0x1
 387 000c A3000000 		.4byte	.LASF32
 388 0010 0C       		.byte	0xc
 389 0011 75010000 		.4byte	.LASF33
 390 0015 31010000 		.4byte	.LASF34
 391 0019 00000000 		.4byte	.Ldebug_ranges0+0
 392 001d 00000000 		.4byte	0
 393 0021 00000000 		.4byte	.Ldebug_line0
 394 0025 02       		.uleb128 0x2
 395 0026 01       		.byte	0x1
 396 0027 06       		.byte	0x6
 397 0028 75020000 		.4byte	.LASF0
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 16


 398 002c 02       		.uleb128 0x2
 399 002d 01       		.byte	0x1
 400 002e 08       		.byte	0x8
 401 002f 7D000000 		.4byte	.LASF1
 402 0033 02       		.uleb128 0x2
 403 0034 02       		.byte	0x2
 404 0035 05       		.byte	0x5
 405 0036 17020000 		.4byte	.LASF2
 406 003a 02       		.uleb128 0x2
 407 003b 02       		.byte	0x2
 408 003c 07       		.byte	0x7
 409 003d 4F000000 		.4byte	.LASF3
 410 0041 02       		.uleb128 0x2
 411 0042 04       		.byte	0x4
 412 0043 05       		.byte	0x5
 413 0044 4B020000 		.4byte	.LASF4
 414 0048 02       		.uleb128 0x2
 415 0049 04       		.byte	0x4
 416 004a 07       		.byte	0x7
 417 004b 8B000000 		.4byte	.LASF5
 418 004f 02       		.uleb128 0x2
 419 0050 08       		.byte	0x8
 420 0051 05       		.byte	0x5
 421 0052 04020000 		.4byte	.LASF6
 422 0056 02       		.uleb128 0x2
 423 0057 08       		.byte	0x8
 424 0058 07       		.byte	0x7
 425 0059 BA010000 		.4byte	.LASF7
 426 005d 03       		.uleb128 0x3
 427 005e 04       		.byte	0x4
 428 005f 05       		.byte	0x5
 429 0060 696E7400 		.ascii	"int\000"
 430 0064 02       		.uleb128 0x2
 431 0065 04       		.byte	0x4
 432 0066 07       		.byte	0x7
 433 0067 AD010000 		.4byte	.LASF8
 434 006b 04       		.uleb128 0x4
 435 006c 9D000000 		.4byte	.LASF9
 436 0070 02       		.byte	0x2
 437 0071 D201     		.2byte	0x1d2
 438 0073 2C000000 		.4byte	0x2c
 439 0077 04       		.uleb128 0x4
 440 0078 94010000 		.4byte	.LASF10
 441 007c 02       		.byte	0x2
 442 007d D301     		.2byte	0x1d3
 443 007f 3A000000 		.4byte	0x3a
 444 0083 04       		.uleb128 0x4
 445 0084 A6010000 		.4byte	.LASF11
 446 0088 02       		.byte	0x2
 447 0089 D401     		.2byte	0x1d4
 448 008b 48000000 		.4byte	0x48
 449 008f 02       		.uleb128 0x2
 450 0090 04       		.byte	0x4
 451 0091 04       		.byte	0x4
 452 0092 77000000 		.4byte	.LASF12
 453 0096 02       		.uleb128 0x2
 454 0097 08       		.byte	0x8
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 17


 455 0098 04       		.byte	0x4
 456 0099 6E010000 		.4byte	.LASF13
 457 009d 02       		.uleb128 0x2
 458 009e 01       		.byte	0x1
 459 009f 08       		.byte	0x8
 460 00a0 12020000 		.4byte	.LASF14
 461 00a4 04       		.uleb128 0x4
 462 00a5 0D000000 		.4byte	.LASF15
 463 00a9 02       		.byte	0x2
 464 00aa 7E02     		.2byte	0x27e
 465 00ac B0000000 		.4byte	0xb0
 466 00b0 05       		.uleb128 0x5
 467 00b1 83000000 		.4byte	0x83
 468 00b5 02       		.uleb128 0x2
 469 00b6 08       		.byte	0x8
 470 00b7 04       		.byte	0x4
 471 00b8 69020000 		.4byte	.LASF16
 472 00bc 02       		.uleb128 0x2
 473 00bd 04       		.byte	0x4
 474 00be 07       		.byte	0x7
 475 00bf FB010000 		.4byte	.LASF17
 476 00c3 06       		.uleb128 0x6
 477 00c4 9B010000 		.4byte	.LASF18
 478 00c8 01       		.byte	0x1
 479 00c9 7B       		.byte	0x7b
 480 00ca 00000000 		.4byte	.LFB2
 481 00ce 0E000000 		.4byte	.LFE2-.LFB2
 482 00d2 01       		.uleb128 0x1
 483 00d3 9C       		.byte	0x9c
 484 00d4 06       		.uleb128 0x6
 485 00d5 00000000 		.4byte	.LASF19
 486 00d9 01       		.byte	0x1
 487 00da AB       		.byte	0xab
 488 00db 00000000 		.4byte	.LFB3
 489 00df 24000000 		.4byte	.LFE3-.LFB3
 490 00e3 01       		.uleb128 0x1
 491 00e4 9C       		.byte	0x9c
 492 00e5 06       		.uleb128 0x6
 493 00e6 1E000000 		.4byte	.LASF20
 494 00ea 01       		.byte	0x1
 495 00eb D2       		.byte	0xd2
 496 00ec 00000000 		.4byte	.LFB4
 497 00f0 24000000 		.4byte	.LFE4-.LFB4
 498 00f4 01       		.uleb128 0x1
 499 00f5 9C       		.byte	0x9c
 500 00f6 06       		.uleb128 0x6
 501 00f7 35020000 		.4byte	.LASF21
 502 00fb 01       		.byte	0x1
 503 00fc EF       		.byte	0xef
 504 00fd 00000000 		.4byte	.LFB5
 505 0101 28000000 		.4byte	.LFE5-.LFB5
 506 0105 01       		.uleb128 0x1
 507 0106 9C       		.byte	0x9c
 508 0107 07       		.uleb128 0x7
 509 0108 54020000 		.4byte	.LASF22
 510 010c 01       		.byte	0x1
 511 010d 1701     		.2byte	0x117
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 18


 512 010f 00000000 		.4byte	.LFB6
 513 0113 34000000 		.4byte	.LFE6-.LFB6
 514 0117 01       		.uleb128 0x1
 515 0118 9C       		.byte	0x9c
 516 0119 3C010000 		.4byte	0x13c
 517 011d 08       		.uleb128 0x8
 518 011e 2A000000 		.4byte	.LASF24
 519 0122 01       		.byte	0x1
 520 0123 1701     		.2byte	0x117
 521 0125 83000000 		.4byte	0x83
 522 0129 02       		.uleb128 0x2
 523 012a 91       		.byte	0x91
 524 012b 6C       		.sleb128 -20
 525 012c 09       		.uleb128 0x9
 526 012d 40020000 		.4byte	.LASF25
 527 0131 01       		.byte	0x1
 528 0132 1901     		.2byte	0x119
 529 0134 83000000 		.4byte	0x83
 530 0138 02       		.uleb128 0x2
 531 0139 91       		.byte	0x91
 532 013a 74       		.sleb128 -12
 533 013b 00       		.byte	0
 534 013c 07       		.uleb128 0x7
 535 013d 62000000 		.4byte	.LASF23
 536 0141 01       		.byte	0x1
 537 0142 3001     		.2byte	0x130
 538 0144 00000000 		.4byte	.LFB7
 539 0148 34000000 		.4byte	.LFE7-.LFB7
 540 014c 01       		.uleb128 0x1
 541 014d 9C       		.byte	0x9c
 542 014e 71010000 		.4byte	0x171
 543 0152 08       		.uleb128 0x8
 544 0153 2A000000 		.4byte	.LASF24
 545 0157 01       		.byte	0x1
 546 0158 3001     		.2byte	0x130
 547 015a 83000000 		.4byte	0x83
 548 015e 02       		.uleb128 0x2
 549 015f 91       		.byte	0x91
 550 0160 6C       		.sleb128 -20
 551 0161 09       		.uleb128 0x9
 552 0162 13000000 		.4byte	.LASF26
 553 0166 01       		.byte	0x1
 554 0167 3201     		.2byte	0x132
 555 0169 83000000 		.4byte	0x83
 556 016d 02       		.uleb128 0x2
 557 016e 91       		.byte	0x91
 558 016f 74       		.sleb128 -12
 559 0170 00       		.byte	0
 560 0171 0A       		.uleb128 0xa
 561 0172 21020000 		.4byte	.LASF27
 562 0176 01       		.byte	0x1
 563 0177 6401     		.2byte	0x164
 564 0179 00000000 		.4byte	.LFB8
 565 017d 0A000000 		.4byte	.LFE8-.LFB8
 566 0181 01       		.uleb128 0x1
 567 0182 9C       		.byte	0x9c
 568 0183 0B       		.uleb128 0xb
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 19


 569 0184 D1010000 		.4byte	.LASF28
 570 0188 01       		.byte	0x1
 571 0189 7D01     		.2byte	0x17d
 572 018b 00000000 		.4byte	.LFB9
 573 018f 0E000000 		.4byte	.LFE9-.LFB9
 574 0193 01       		.uleb128 0x1
 575 0194 9C       		.byte	0x9c
 576 0195 0B       		.uleb128 0xb
 577 0196 E9010000 		.4byte	.LASF29
 578 019a 01       		.byte	0x1
 579 019b A201     		.2byte	0x1a2
 580 019d 00000000 		.4byte	.LFB10
 581 01a1 0E000000 		.4byte	.LFE10-.LFB10
 582 01a5 01       		.uleb128 0x1
 583 01a6 9C       		.byte	0x9c
 584 01a7 0C       		.uleb128 0xc
 585 01a8 41000000 		.4byte	.LASF30
 586 01ac 01       		.byte	0x1
 587 01ad 51       		.byte	0x51
 588 01ae 6B000000 		.4byte	0x6b
 589 01b2 05       		.uleb128 0x5
 590 01b3 03       		.byte	0x3
 591 01b4 00000000 		.4byte	SCB_1_initVar
 592 01b8 0C       		.uleb128 0xc
 593 01b9 30000000 		.4byte	.LASF31
 594 01bd 01       		.byte	0x1
 595 01be 5A       		.byte	0x5a
 596 01bf 77000000 		.4byte	0x77
 597 01c3 05       		.uleb128 0x5
 598 01c4 03       		.byte	0x3
 599 01c5 00000000 		.4byte	SCB_1_IntrTxMask
 600 01c9 00       		.byte	0
 601              		.section	.debug_abbrev,"",%progbits
 602              	.Ldebug_abbrev0:
 603 0000 01       		.uleb128 0x1
 604 0001 11       		.uleb128 0x11
 605 0002 01       		.byte	0x1
 606 0003 25       		.uleb128 0x25
 607 0004 0E       		.uleb128 0xe
 608 0005 13       		.uleb128 0x13
 609 0006 0B       		.uleb128 0xb
 610 0007 03       		.uleb128 0x3
 611 0008 0E       		.uleb128 0xe
 612 0009 1B       		.uleb128 0x1b
 613 000a 0E       		.uleb128 0xe
 614 000b 55       		.uleb128 0x55
 615 000c 17       		.uleb128 0x17
 616 000d 11       		.uleb128 0x11
 617 000e 01       		.uleb128 0x1
 618 000f 10       		.uleb128 0x10
 619 0010 17       		.uleb128 0x17
 620 0011 00       		.byte	0
 621 0012 00       		.byte	0
 622 0013 02       		.uleb128 0x2
 623 0014 24       		.uleb128 0x24
 624 0015 00       		.byte	0
 625 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 20


 626 0017 0B       		.uleb128 0xb
 627 0018 3E       		.uleb128 0x3e
 628 0019 0B       		.uleb128 0xb
 629 001a 03       		.uleb128 0x3
 630 001b 0E       		.uleb128 0xe
 631 001c 00       		.byte	0
 632 001d 00       		.byte	0
 633 001e 03       		.uleb128 0x3
 634 001f 24       		.uleb128 0x24
 635 0020 00       		.byte	0
 636 0021 0B       		.uleb128 0xb
 637 0022 0B       		.uleb128 0xb
 638 0023 3E       		.uleb128 0x3e
 639 0024 0B       		.uleb128 0xb
 640 0025 03       		.uleb128 0x3
 641 0026 08       		.uleb128 0x8
 642 0027 00       		.byte	0
 643 0028 00       		.byte	0
 644 0029 04       		.uleb128 0x4
 645 002a 16       		.uleb128 0x16
 646 002b 00       		.byte	0
 647 002c 03       		.uleb128 0x3
 648 002d 0E       		.uleb128 0xe
 649 002e 3A       		.uleb128 0x3a
 650 002f 0B       		.uleb128 0xb
 651 0030 3B       		.uleb128 0x3b
 652 0031 05       		.uleb128 0x5
 653 0032 49       		.uleb128 0x49
 654 0033 13       		.uleb128 0x13
 655 0034 00       		.byte	0
 656 0035 00       		.byte	0
 657 0036 05       		.uleb128 0x5
 658 0037 35       		.uleb128 0x35
 659 0038 00       		.byte	0
 660 0039 49       		.uleb128 0x49
 661 003a 13       		.uleb128 0x13
 662 003b 00       		.byte	0
 663 003c 00       		.byte	0
 664 003d 06       		.uleb128 0x6
 665 003e 2E       		.uleb128 0x2e
 666 003f 00       		.byte	0
 667 0040 3F       		.uleb128 0x3f
 668 0041 19       		.uleb128 0x19
 669 0042 03       		.uleb128 0x3
 670 0043 0E       		.uleb128 0xe
 671 0044 3A       		.uleb128 0x3a
 672 0045 0B       		.uleb128 0xb
 673 0046 3B       		.uleb128 0x3b
 674 0047 0B       		.uleb128 0xb
 675 0048 27       		.uleb128 0x27
 676 0049 19       		.uleb128 0x19
 677 004a 11       		.uleb128 0x11
 678 004b 01       		.uleb128 0x1
 679 004c 12       		.uleb128 0x12
 680 004d 06       		.uleb128 0x6
 681 004e 40       		.uleb128 0x40
 682 004f 18       		.uleb128 0x18
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 21


 683 0050 9642     		.uleb128 0x2116
 684 0052 19       		.uleb128 0x19
 685 0053 00       		.byte	0
 686 0054 00       		.byte	0
 687 0055 07       		.uleb128 0x7
 688 0056 2E       		.uleb128 0x2e
 689 0057 01       		.byte	0x1
 690 0058 3F       		.uleb128 0x3f
 691 0059 19       		.uleb128 0x19
 692 005a 03       		.uleb128 0x3
 693 005b 0E       		.uleb128 0xe
 694 005c 3A       		.uleb128 0x3a
 695 005d 0B       		.uleb128 0xb
 696 005e 3B       		.uleb128 0x3b
 697 005f 05       		.uleb128 0x5
 698 0060 27       		.uleb128 0x27
 699 0061 19       		.uleb128 0x19
 700 0062 11       		.uleb128 0x11
 701 0063 01       		.uleb128 0x1
 702 0064 12       		.uleb128 0x12
 703 0065 06       		.uleb128 0x6
 704 0066 40       		.uleb128 0x40
 705 0067 18       		.uleb128 0x18
 706 0068 9742     		.uleb128 0x2117
 707 006a 19       		.uleb128 0x19
 708 006b 01       		.uleb128 0x1
 709 006c 13       		.uleb128 0x13
 710 006d 00       		.byte	0
 711 006e 00       		.byte	0
 712 006f 08       		.uleb128 0x8
 713 0070 05       		.uleb128 0x5
 714 0071 00       		.byte	0
 715 0072 03       		.uleb128 0x3
 716 0073 0E       		.uleb128 0xe
 717 0074 3A       		.uleb128 0x3a
 718 0075 0B       		.uleb128 0xb
 719 0076 3B       		.uleb128 0x3b
 720 0077 05       		.uleb128 0x5
 721 0078 49       		.uleb128 0x49
 722 0079 13       		.uleb128 0x13
 723 007a 02       		.uleb128 0x2
 724 007b 18       		.uleb128 0x18
 725 007c 00       		.byte	0
 726 007d 00       		.byte	0
 727 007e 09       		.uleb128 0x9
 728 007f 34       		.uleb128 0x34
 729 0080 00       		.byte	0
 730 0081 03       		.uleb128 0x3
 731 0082 0E       		.uleb128 0xe
 732 0083 3A       		.uleb128 0x3a
 733 0084 0B       		.uleb128 0xb
 734 0085 3B       		.uleb128 0x3b
 735 0086 05       		.uleb128 0x5
 736 0087 49       		.uleb128 0x49
 737 0088 13       		.uleb128 0x13
 738 0089 02       		.uleb128 0x2
 739 008a 18       		.uleb128 0x18
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 22


 740 008b 00       		.byte	0
 741 008c 00       		.byte	0
 742 008d 0A       		.uleb128 0xa
 743 008e 2E       		.uleb128 0x2e
 744 008f 00       		.byte	0
 745 0090 03       		.uleb128 0x3
 746 0091 0E       		.uleb128 0xe
 747 0092 3A       		.uleb128 0x3a
 748 0093 0B       		.uleb128 0xb
 749 0094 3B       		.uleb128 0x3b
 750 0095 05       		.uleb128 0x5
 751 0096 27       		.uleb128 0x27
 752 0097 19       		.uleb128 0x19
 753 0098 11       		.uleb128 0x11
 754 0099 01       		.uleb128 0x1
 755 009a 12       		.uleb128 0x12
 756 009b 06       		.uleb128 0x6
 757 009c 40       		.uleb128 0x40
 758 009d 18       		.uleb128 0x18
 759 009e 9742     		.uleb128 0x2117
 760 00a0 19       		.uleb128 0x19
 761 00a1 00       		.byte	0
 762 00a2 00       		.byte	0
 763 00a3 0B       		.uleb128 0xb
 764 00a4 2E       		.uleb128 0x2e
 765 00a5 00       		.byte	0
 766 00a6 03       		.uleb128 0x3
 767 00a7 0E       		.uleb128 0xe
 768 00a8 3A       		.uleb128 0x3a
 769 00a9 0B       		.uleb128 0xb
 770 00aa 3B       		.uleb128 0x3b
 771 00ab 05       		.uleb128 0x5
 772 00ac 27       		.uleb128 0x27
 773 00ad 19       		.uleb128 0x19
 774 00ae 11       		.uleb128 0x11
 775 00af 01       		.uleb128 0x1
 776 00b0 12       		.uleb128 0x12
 777 00b1 06       		.uleb128 0x6
 778 00b2 40       		.uleb128 0x40
 779 00b3 18       		.uleb128 0x18
 780 00b4 9642     		.uleb128 0x2116
 781 00b6 19       		.uleb128 0x19
 782 00b7 00       		.byte	0
 783 00b8 00       		.byte	0
 784 00b9 0C       		.uleb128 0xc
 785 00ba 34       		.uleb128 0x34
 786 00bb 00       		.byte	0
 787 00bc 03       		.uleb128 0x3
 788 00bd 0E       		.uleb128 0xe
 789 00be 3A       		.uleb128 0x3a
 790 00bf 0B       		.uleb128 0xb
 791 00c0 3B       		.uleb128 0x3b
 792 00c1 0B       		.uleb128 0xb
 793 00c2 49       		.uleb128 0x49
 794 00c3 13       		.uleb128 0x13
 795 00c4 3F       		.uleb128 0x3f
 796 00c5 19       		.uleb128 0x19
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 23


 797 00c6 02       		.uleb128 0x2
 798 00c7 18       		.uleb128 0x18
 799 00c8 00       		.byte	0
 800 00c9 00       		.byte	0
 801 00ca 00       		.byte	0
 802              		.section	.debug_aranges,"",%progbits
 803 0000 5C000000 		.4byte	0x5c
 804 0004 0200     		.2byte	0x2
 805 0006 00000000 		.4byte	.Ldebug_info0
 806 000a 04       		.byte	0x4
 807 000b 00       		.byte	0
 808 000c 0000     		.2byte	0
 809 000e 0000     		.2byte	0
 810 0010 00000000 		.4byte	.LFB2
 811 0014 0E000000 		.4byte	.LFE2-.LFB2
 812 0018 00000000 		.4byte	.LFB3
 813 001c 24000000 		.4byte	.LFE3-.LFB3
 814 0020 00000000 		.4byte	.LFB4
 815 0024 24000000 		.4byte	.LFE4-.LFB4
 816 0028 00000000 		.4byte	.LFB5
 817 002c 28000000 		.4byte	.LFE5-.LFB5
 818 0030 00000000 		.4byte	.LFB6
 819 0034 34000000 		.4byte	.LFE6-.LFB6
 820 0038 00000000 		.4byte	.LFB7
 821 003c 34000000 		.4byte	.LFE7-.LFB7
 822 0040 00000000 		.4byte	.LFB8
 823 0044 0A000000 		.4byte	.LFE8-.LFB8
 824 0048 00000000 		.4byte	.LFB9
 825 004c 0E000000 		.4byte	.LFE9-.LFB9
 826 0050 00000000 		.4byte	.LFB10
 827 0054 0E000000 		.4byte	.LFE10-.LFB10
 828 0058 00000000 		.4byte	0
 829 005c 00000000 		.4byte	0
 830              		.section	.debug_ranges,"",%progbits
 831              	.Ldebug_ranges0:
 832 0000 00000000 		.4byte	.LFB2
 833 0004 0E000000 		.4byte	.LFE2
 834 0008 00000000 		.4byte	.LFB3
 835 000c 24000000 		.4byte	.LFE3
 836 0010 00000000 		.4byte	.LFB4
 837 0014 24000000 		.4byte	.LFE4
 838 0018 00000000 		.4byte	.LFB5
 839 001c 28000000 		.4byte	.LFE5
 840 0020 00000000 		.4byte	.LFB6
 841 0024 34000000 		.4byte	.LFE6
 842 0028 00000000 		.4byte	.LFB7
 843 002c 34000000 		.4byte	.LFE7
 844 0030 00000000 		.4byte	.LFB8
 845 0034 0A000000 		.4byte	.LFE8
 846 0038 00000000 		.4byte	.LFB9
 847 003c 0E000000 		.4byte	.LFE9
 848 0040 00000000 		.4byte	.LFB10
 849 0044 0E000000 		.4byte	.LFE10
 850 0048 00000000 		.4byte	0
 851 004c 00000000 		.4byte	0
 852              		.section	.debug_line,"",%progbits
 853              	.Ldebug_line0:
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 24


 854 0000 02010000 		.section	.debug_str,"MS",%progbits,1
 854      02004200 
 854      00000201 
 854      FB0E0D00 
 854      01010101 
 855              	.LASF19:
 856 0000 5343425F 		.ascii	"SCB_1_Enable\000"
 856      315F456E 
 856      61626C65 
 856      00
 857              	.LASF15:
 858 000d 72656733 		.ascii	"reg32\000"
 858      3200
 859              	.LASF26:
 860 0013 74784669 		.ascii	"txFifoCtrl\000"
 860      666F4374 
 860      726C00
 861              	.LASF20:
 862 001e 5343425F 		.ascii	"SCB_1_Start\000"
 862      315F5374 
 862      61727400 
 863              	.LASF24:
 864 002a 6C657665 		.ascii	"level\000"
 864      6C00
 865              	.LASF31:
 866 0030 5343425F 		.ascii	"SCB_1_IntrTxMask\000"
 866      315F496E 
 866      74725478 
 866      4D61736B 
 866      00
 867              	.LASF30:
 868 0041 5343425F 		.ascii	"SCB_1_initVar\000"
 868      315F696E 
 868      69745661 
 868      7200
 869              	.LASF3:
 870 004f 73686F72 		.ascii	"short unsigned int\000"
 870      7420756E 
 870      7369676E 
 870      65642069 
 870      6E7400
 871              	.LASF23:
 872 0062 5343425F 		.ascii	"SCB_1_SetTxFifoLevel\000"
 872      315F5365 
 872      74547846 
 872      69666F4C 
 872      6576656C 
 873              	.LASF12:
 874 0077 666C6F61 		.ascii	"float\000"
 874      7400
 875              	.LASF1:
 876 007d 756E7369 		.ascii	"unsigned char\000"
 876      676E6564 
 876      20636861 
 876      7200
 877              	.LASF5:
 878 008b 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 25


 878      20756E73 
 878      69676E65 
 878      6420696E 
 878      7400
 879              	.LASF9:
 880 009d 75696E74 		.ascii	"uint8\000"
 880      3800
 881              	.LASF32:
 882 00a3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 882      43313120 
 882      352E342E 
 882      31203230 
 882      31363036 
 883 00d6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 883      20726576 
 883      6973696F 
 883      6E203233 
 883      37373135 
 884 0109 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 884      66756E63 
 884      74696F6E 
 884      2D736563 
 884      74696F6E 
 885              	.LASF34:
 886 0131 433A5C55 		.ascii	"C:\\Users\\puria\\Documents\\GitHub\\able\\psoc\\mu"
 886      73657273 
 886      5C707572 
 886      69615C44 
 886      6F63756D 
 887 015d 6C746963 		.ascii	"lticon_ble.cydsn\000"
 887      6F6E5F62 
 887      6C652E63 
 887      7964736E 
 887      00
 888              	.LASF13:
 889 016e 646F7562 		.ascii	"double\000"
 889      6C6500
 890              	.LASF33:
 891 0175 47656E65 		.ascii	"Generated_Source\\PSoC4\\SCB_1.c\000"
 891      72617465 
 891      645F536F 
 891      75726365 
 891      5C50536F 
 892              	.LASF10:
 893 0194 75696E74 		.ascii	"uint16\000"
 893      313600
 894              	.LASF18:
 895 019b 5343425F 		.ascii	"SCB_1_Init\000"
 895      315F496E 
 895      697400
 896              	.LASF11:
 897 01a6 75696E74 		.ascii	"uint32\000"
 897      333200
 898              	.LASF8:
 899 01ad 756E7369 		.ascii	"unsigned int\000"
 899      676E6564 
 899      20696E74 
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 26


 899      00
 900              	.LASF7:
 901 01ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 901      206C6F6E 
 901      6720756E 
 901      7369676E 
 901      65642069 
 902              	.LASF28:
 903 01d1 5343425F 		.ascii	"SCB_1_ScbModePostEnable\000"
 903      315F5363 
 903      624D6F64 
 903      65506F73 
 903      74456E61 
 904              	.LASF29:
 905 01e9 5343425F 		.ascii	"SCB_1_ScbModeStop\000"
 905      315F5363 
 905      624D6F64 
 905      6553746F 
 905      7000
 906              	.LASF17:
 907 01fb 73697A65 		.ascii	"sizetype\000"
 907      74797065 
 907      00
 908              	.LASF6:
 909 0204 6C6F6E67 		.ascii	"long long int\000"
 909      206C6F6E 
 909      6720696E 
 909      7400
 910              	.LASF14:
 911 0212 63686172 		.ascii	"char\000"
 911      00
 912              	.LASF2:
 913 0217 73686F72 		.ascii	"short int\000"
 913      7420696E 
 913      7400
 914              	.LASF27:
 915 0221 5343425F 		.ascii	"SCB_1_ScbEnableIntr\000"
 915      315F5363 
 915      62456E61 
 915      626C6549 
 915      6E747200 
 916              	.LASF21:
 917 0235 5343425F 		.ascii	"SCB_1_Stop\000"
 917      315F5374 
 917      6F7000
 918              	.LASF25:
 919 0240 72784669 		.ascii	"rxFifoCtrl\000"
 919      666F4374 
 919      726C00
 920              	.LASF4:
 921 024b 6C6F6E67 		.ascii	"long int\000"
 921      20696E74 
 921      00
 922              	.LASF22:
 923 0254 5343425F 		.ascii	"SCB_1_SetRxFifoLevel\000"
 923      315F5365 
 923      74527846 
ARM GAS  C:\Users\puria\AppData\Local\Temp\ccy58VrP.s 			page 27


 923      69666F4C 
 923      6576656C 
 924              	.LASF16:
 925 0269 6C6F6E67 		.ascii	"long double\000"
 925      20646F75 
 925      626C6500 
 926              	.LASF0:
 927 0275 7369676E 		.ascii	"signed char\000"
 927      65642063 
 927      68617200 
 928              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
